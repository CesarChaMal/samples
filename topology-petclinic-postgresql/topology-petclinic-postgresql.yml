tosca_definitions_version: alien_dsl_1_4_0

metadata:
  template_name: PetclinicPostgres
  template_version: 0.1.0-SNAPSHOT
  template_author: admin

description: A sample topology of a Petclinic application hosted on a Tomcat server and connected to a Postgresql database.

imports:
  - tomcat-war-types:1.4.0-SNAPSHOT
  - tosca-normative-types:1.0.0-ALIEN14
  - jdk-type:1.4.0-SNAPSHOT
  - alien-base-types:1.4.0-SNAPSHOT
  - petclinic:1.4.0-SNAPSHOT
  - postgresql-type:1.4.0-SNAPSHOT
  - mysql-type:1.4.0-SNAPSHOT

repositories:
  fastconnect_nexus:
    url: https://fastconnect.org/maven/content/repositories/opensource-snapshot
    type: maven

topology_template:
  node_templates:
    JDK:
      type: org.alien4cloud.nodes.JDK
      properties:
        java_url: "http://download.oracle.com/otn-pub/java/jdk/8u101-b13/jdk-8u101-linux-x64.tar.gz"
        java_home: "/opt/java"
        component_version: "8.101"
      requirements:
        - host:
            node: Front
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    Tomcat:
      type: org.alien4cloud.nodes.Tomcat
      properties:
        tomcat_home: "/opt/tomcat"
        download_url: "https://archive.apache.org/dist/tomcat/tomcat-8/v8.0.39/bin/apache-tomcat-8.0.39.tar.gz"
        component_version: "8.0.39"
      requirements:
        - host:
            node: JDK
            capability: org.alien4cloud.capabilities.JDK
            relationship: org.alien4cloud.relationships.JavaSoftwareHostedOnJDK
      capabilities:
        data_endpoint:
          properties:
            protocol: http
            port: 80
            secure: false
            network_name: PRIVATE
            initiator: source
        admin_endpoint:
          properties:
            secure: true
            protocol: tcp
            network_name: PRIVATE
            initiator: source
    Front:
      type: tosca.nodes.Compute
      capabilities:
        os:
          properties:
            architecture: "x86_64"
            type: linux
            distribution: ubuntu
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1
        endpoint:
          properties:
            secure: true
            protocol: tcp
            network_name: PRIVATE
            initiator: source
    Postgresql:
      type: alien.nodes.Postgresql
      properties:
        port: 5432
        name: petclinic
        postgresql_repository: "http://yum.postgresql.org/9.5/redhat/rhel-7-x86_64/pgdg-centos95-9.5-2.noarch.rpm"
        user: petclinic
        password: petclinic
      requirements:
        - host:
            node: Database
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
      capabilities:
        database_endpoint:
          properties:
            protocol: tcp
            secure: false
            network_name: PRIVATE
            initiator: source
    Database:
      type: tosca.nodes.Compute
      capabilities:
        os:
          properties:
            architecture: "x86_64"
            type: linux
            distribution: centos
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1
        endpoint:
          properties:
            secure: true
            protocol: tcp
            network_name: PRIVATE
            initiator: source
    Petclinic:
      type: alien.nodes.Petclinic
      requirements:
        - database:
            node: Postgresql
            capability: org.alien4cloud.capabilities.PostgresqlDatabaseEndpoint
            relationship: alien.relationships.PetclinicConnectsToPostgresql
        - host:
            node: Tomcat
            capability: org.alien4cloud.capabilities.WarContainer
            relationship: org.alien4cloud.relationships.WarHostedOnTomcat
      capabilities:
        app_endpoint:
          properties:
            protocol: { get_property: [HOST, data_endpoint, protocol] }
            port: { get_property: [HOST, data_endpoint, port] }
            secure: false
            url_path: clinic
            network_name: PRIVATE
            initiator: source
  outputs:
    Petclinic_application_url:
      value: { get_attribute: [ Petclinic, application_url ] }
