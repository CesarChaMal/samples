tosca_definitions_version: alien_dsl_1_4_0

metadata:
  template_name: org.alien4cloud.nodes.HostedMongo
  template_version: 1.4.0-SNAPSHOT
  template_author: alien4cloud

description: This template contains the software components types as well as a topology to introduce a substituted type that is already hosted on compute.

imports:
  - tosca-normative-types:1.0.0-ALIEN14

node_types:
  org.alien4cloud.nodes.AbstractMongod:
    derived_from: tosca.nodes.DBMS
    abstract: true
    capabilities:
      endpoint:
        type: org.alien4cloud.capabilities.endpoint.Mongo
    metadata:
      icon: /images/mongodb.jpg
    properties:
      port:
        type: integer
        default: 27017
        constraints:
          - in_range: [8000,65535]

  org.alien4cloud.nodes.Mongod:
    derived_from: org.alien4cloud.nodes.AbstractMongod
    description: >
      A node to install Mongodb nosql database.
    requirements:
      - host: # Overrides the parent host requirement to add a specific node_filter and add OS constraints as Impl is based on apt and so restricted to debian.
          capability: tosca.capabilities.Container
          node: tosca.nodes.Compute
          relationship: tosca.relationships.HostedOn
          occurrences: [1, 1]
          node_filter:
            capabilities:
              - tosca.capabilities.OperatingSystem:
                  properties:
                    - type: { equal: linux }
                    - architecture: { equal: x86_64 }
                    - distribution: { valid_values: [ debian, ubuntu, knoppix ] }
    metadata:
      icon: /images/mongodb.jpg
    interfaces:
      Standard:
        create: scripts/install-mongo.sh
        configure:
          inputs:
            DB_IP: { get_attribute: [HOST, ip_address] }
            DB_PORT: { get_property: [SELF, port] }
          implementation: scripts/configure-mongo.sh
        start: scripts/start-mongo.sh
        stop: scripts/stop-mongo.sh

capability_types:
  org.alien4cloud.capabilities.endpoint.Mongo:
    derived_from: tosca.capabilities.Endpoint.Database
    description: >
      Capability to connect to a Mongo database through bridge networking.
    properties:
      port:
        type: integer
        default: 27017
        constraints:
          - in_range: [8000,65535]

topology_template:
  inputs:
    port:
      type: integer
      required: true
      default: 27017
      constraints:
        - in_range: [8000, 65535]
  substitution_mappings:
    node_type: org.alien4cloud.nodes.AbstractMongod
    capabilities:
      endpoint: [ Mongod, endpoint ]
  node_templates:
    Mongod:
      type: org.alien4cloud.nodes.Mongod
      properties:
        port: { get_input: port }
      requirements:
        - host:
            node: MongoDbHost
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
      capabilities:
        endpoint:
          properties:
            protocol: tcp
            secure: false
            network_name: PRIVATE
            initiator: source
    MongoDbHost:
      type: tosca.nodes.Compute
      capabilities:
        os:
          properties:
            type: linux
            architecture: x86_64
            distribution: ubuntu
  outputs:
    port:
      value: { get_property: [ Mongod, port ] }
    ip_address:
      value: { get_attribute: [ MongoDbHost, ip_address ] }
