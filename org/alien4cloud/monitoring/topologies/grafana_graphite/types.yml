tosca_definitions_version: alien_dsl_1_4_0

metadata:
  template_name: org.alien4cloud.monitoring.topologies.grafana_graphite
  template_version: 1.4.0-SNAPSHOT
  template_author: alien4cloud

description: |
  Graphite As a Service : a Grafana that connects to a Graphite as a backend.
  Can be used to expose a monitoring service.
  Tested on a Centos ami-4c4b003b (t2.medium).
  - ALIEN-2409: I can't expose Graphite.capabilities.http_endpoint if
    Graphite.capabilities.data_endpoint is already exposed !

imports:
  - org.alien4cloud.monitoring.pub:1.4.0-SNAPSHOT
  - org.alien4cloud.automation.cloudify.manager.pub:1.4.0-SNAPSHOT
  - tosca-normative-types:1.0.0-ALIEN14
  - org.alien4cloud.monitoring.diamond:1.4.0-SNAPSHOT
  - cloudify3-common-types:1.4.0
  - org.alien4cloud.monitoring.grafana:1.4.0-SNAPSHOT
  - alien-base-types:1.4.0-SNAPSHOT
  - org.alien4cloud.lang.java.pub:1.4.0-SNAPSHOT
  - org.alien4cloud.lang.java.jmx.jolokia:1.4.0-SNAPSHOT
  - org.alien4cloud.storage.elasticsearch.pub:1.4.0-SNAPSHOT
  - org.alien4cloud.automation.a4c.pub:1.4.0-SNAPSHOT
  - org.alien4cloud.db.postgresql.pub:1.4.0-SNAPSHOT
  - org.alien4cloud.messaging.rabbitmq.pub:1.4.0-SNAPSHOT
  - org.alien4cloud.monitoring.graphite:1.4.0-SNAPSHOT

topology_template:
  substitution_mappings:
    node_type: org.alien4cloud.monitoring.pub.nodes.GraphiteService
    capabilities:
      http_endpoint: [ Grafana, http_endpoint ]
      data_endpoint: [ Graphite, data_endpoint ]
  node_templates:
    xGrafanaCompute:
      type: tosca.nodes.Compute
      requirements:
        - network:
            node: PublicNetwork
            capability: tosca.capabilities.Connectivity
            relationship: tosca.relationships.Network
      capabilities:
        os:
          properties:
            architecture: "x86_64"
            type: linux
            distribution: centos
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1
        endpoint:
          properties:
            secure: true
            protocol: tcp
            network_name: PRIVATE
            initiator: source
    Grafana:
      type: org.alien4cloud.monitoring.grafana.nodes.Grafana
      properties:
        component_version: "4.1.2"
      requirements:
        - host:
            node: xGrafanaCompute
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
        - graphite:
            node: Graphite
            capability: org.alien4cloud.monitoring.pub.capabilities.GraphiteHttpEndpoint
            relationship: org.alien4cloud.monitoring.grafana.relationships.GrafanaConnectToGraphite
            properties:
              datasource_name: "Graphite_DS"
      capabilities:
        http_endpoint:
          properties:
            user: admin
            password: admin
            protocol: http
            port: 3000
            secure: false
            network_name: PRIVATE
            initiator: source
    PublicNetwork:
      type: alien.nodes.PublicNetwork
      properties:
        ip_version: 4
    DiamondGrafana:
      type: org.alien4cloud.monitoring.diamond.nodes.DiamondLinuxAgent
      properties:
        datasource_name: "Graphite_DS"
        collectors_path: "/opt/ansible_diamond/env/share/diamond/collectors"
      requirements:
        - host:
            node: xGrafanaCompute
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
        - grafana:
            node: Grafana
            capability: org.alien4cloud.monitoring.pub.capabilities.GrafanaHttpEndpoint
            relationship: org.alien4cloud.monitoring.diamond.relationships.DiamondLinuxAgentConnectsToGrafana
        - data_endpoint:
            node: Graphite
            capability: org.alien4cloud.monitoring.pub.capabilities.GraphiteDataEndpoint
            relationship: org.alien4cloud.monitoring.diamond.relationships.DiamondLinuxAgentConnectsToGraphite
    Graphite:
      type: org.alien4cloud.monitoring.graphite.nodes.Graphite
      properties:
        component_version: "1.0.0"
      requirements:
        - host:
            node: xGrafanaCompute
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
      capabilities:
        data_endpoint:
          properties:
            protocol: http
            port: 2003
            secure: false
            network_name: PRIVATE
            initiator: source
        http_endpoint:
          properties:
            protocol: http
            port: 8080
            secure: false
            network_name: PRIVATE
            initiator: source
  outputs:
    Grafana_grafana_url:
      value: { get_attribute: [ Grafana, grafana_url ] }
  workflows:
    install:
      steps:
        MonitoringCompute_install:
          node: xGrafanaCompute
          activity:
            delegate: install
          on-success:
            - DiamondLinuxAgent_initial
            - Graphite_initial
            - Grafana_initial
            - DiamondLinuxAgent_configuring
        DiamondLinuxAgent_initial:
          node: DiamondGrafana
          activity:
            set_state: initial
          on-success:
            - DiamondLinuxAgent_creating
        DiamondLinuxAgent_creating:
          node: DiamondGrafana
          activity:
            set_state: creating
          on-success:
            - create_DiamondLinuxAgent
        create_DiamondLinuxAgent:
          node: DiamondGrafana
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.create
          on-success:
            - DiamondLinuxAgent_created
        DiamondLinuxAgent_created:
          node: DiamondGrafana
          activity:
            set_state: created
          on-success:
            - Graphite_configuring
            - Grafana_initial
            - Grafana_configuring
            - DiamondLinuxAgent_configuring
        DiamondLinuxAgent_configuring:
          node: DiamondGrafana
          activity:
            set_state: configuring
          on-success:
            - configure_DiamondLinuxAgent
        configure_DiamondLinuxAgent:
          node: DiamondGrafana
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.configure
          on-success:
            - DiamondLinuxAgent_configured
        DiamondLinuxAgent_configured:
          node: DiamondGrafana
          activity:
            set_state: configured
          on-success:
            - DiamondLinuxAgent_starting
        DiamondLinuxAgent_starting:
          node: DiamondGrafana
          activity:
            set_state: starting
          on-success:
            - start_DiamondLinuxAgent
        start_DiamondLinuxAgent:
          node: DiamondGrafana
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - DiamondLinuxAgent_started
        DiamondLinuxAgent_started:
          node: DiamondGrafana
          activity:
            set_state: started
        Grafana_initial:
          node: Grafana
          activity:
            set_state: initial
          on-success:
            - Grafana_creating
        Grafana_creating:
          node: Grafana
          activity:
            set_state: creating
          on-success:
            - create_Grafana
        create_Grafana:
          node: Grafana
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.create
          on-success:
            - Grafana_created
        Grafana_created:
          node: Grafana
          activity:
            set_state: created
          on-success:
            - Graphite_configuring
            - Grafana_configuring
        Grafana_configuring:
          node: Grafana
          activity:
            set_state: configuring
          on-success:
            - configure_Grafana
        configure_Grafana:
          node: Grafana
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.configure
          on-success:
            - Grafana_configured
        Grafana_configured:
          node: Grafana
          activity:
            set_state: configured
          on-success:
            - Grafana_starting
        Grafana_starting:
          node: Grafana
          activity:
            set_state: starting
          on-success:
            - start_Grafana
        start_Grafana:
          node: Grafana
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - Grafana_started
        Grafana_started:
          node: Grafana
          activity:
            set_state: started
          on-success:
            - DiamondLinuxAgent_configuring
        PublicNetwork_install:
          node: PublicNetwork
          activity:
            delegate: install
        Graphite_initial:
          node: Graphite
          activity:
            set_state: initial
          on-success:
            - Graphite_creating
        Graphite_creating:
          node: Graphite
          activity:
            set_state: creating
          on-success:
            - create_Graphite
        create_Graphite:
          node: Graphite
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.create
          on-success:
            - Graphite_created
        Graphite_created:
          node: Graphite
          activity:
            set_state: created
          on-success:
            - Graphite_configuring
        Graphite_configuring:
          node: Graphite
          activity:
            set_state: configuring
          on-success:
            - configure_Graphite
        configure_Graphite:
          node: Graphite
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.configure
          on-success:
            - Graphite_configured
        Graphite_configured:
          node: Graphite
          activity:
            set_state: configured
          on-success:
            - Graphite_starting
        Graphite_starting:
          node: Graphite
          activity:
            set_state: starting
          on-success:
            - start_Graphite
        start_Graphite:
          node: Graphite
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - Graphite_started
        Graphite_started:
          node: Graphite
          activity:
            set_state: started
          on-success:
            - Grafana_configuring
            - DiamondLinuxAgent_configuring
    uninstall:
      steps:
        MonitoringCompute_uninstall:
          node: xGrafanaCompute
          activity:
            delegate: uninstall
        DiamondLinuxAgent_stopping:
          node: DiamondGrafana
          activity:
            set_state: stopping
          on-success:
            - stop_DiamondLinuxAgent
        stop_DiamondLinuxAgent:
          node: DiamondGrafana
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - DiamondLinuxAgent_stopped
        DiamondLinuxAgent_stopped:
          node: DiamondGrafana
          activity:
            set_state: stopped
          on-success:
            - DiamondLinuxAgent_deleting
            - Graphite_stopping
            - Grafana_stopping
            - MonitoringCompute_uninstall
        DiamondLinuxAgent_deleting:
          node: DiamondGrafana
          activity:
            set_state: deleting
          on-success:
            - delete_DiamondLinuxAgent
        delete_DiamondLinuxAgent:
          node: DiamondGrafana
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.delete
          on-success:
            - DiamondLinuxAgent_deleted
        DiamondLinuxAgent_deleted:
          node: DiamondGrafana
          activity:
            set_state: deleted
          on-success:
            - MonitoringCompute_uninstall
        Grafana_stopping:
          node: Grafana
          activity:
            set_state: stopping
          on-success:
            - stop_Grafana
        stop_Grafana:
          node: Grafana
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - Grafana_stopped
        Grafana_stopped:
          node: Grafana
          activity:
            set_state: stopped
          on-success:
            - Graphite_stopping
            - Grafana_deleting
        Grafana_deleting:
          node: Grafana
          activity:
            set_state: deleting
          on-success:
            - delete_Grafana
        delete_Grafana:
          node: Grafana
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.delete
          on-success:
            - Grafana_deleted
        Grafana_deleted:
          node: Grafana
          activity:
            set_state: deleted
          on-success:
            - MonitoringCompute_uninstall
        PublicNetwork_uninstall:
          node: PublicNetwork
          activity:
            delegate: uninstall
        Graphite_stopping:
          node: Graphite
          activity:
            set_state: stopping
          on-success:
            - stop_Graphite
        stop_Graphite:
          node: Graphite
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - Graphite_stopped
        Graphite_stopped:
          node: Graphite
          activity:
            set_state: stopped
          on-success:
            - Graphite_deleting
        Graphite_deleting:
          node: Graphite
          activity:
            set_state: deleting
          on-success:
            - delete_Graphite
        delete_Graphite:
          node: Graphite
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.delete
          on-success:
            - Graphite_deleted
        Graphite_deleted:
          node: Graphite
          activity:
            set_state: deleted
          on-success:
            - MonitoringCompute_uninstall
    start:
      steps:
        MonitoringCompute_start:
          node: xGrafanaCompute
          activity:
            delegate: start
          on-success:
            - Graphite_starting
            - Grafana_starting
            - DiamondLinuxAgent_starting
        start_DiamondLinuxAgent:
          node: DiamondGrafana
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - DiamondLinuxAgent_started
        DiamondLinuxAgent_starting:
          node: DiamondGrafana
          activity:
            set_state: starting
          on-success:
            - start_DiamondLinuxAgent
        DiamondLinuxAgent_started:
          node: DiamondGrafana
          activity:
            set_state: started
        Grafana_starting:
          node: Grafana
          activity:
            set_state: starting
          on-success:
            - start_Grafana
        start_Grafana:
          node: Grafana
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - Grafana_started
        Grafana_started:
          node: Grafana
          activity:
            set_state: started
          on-success:
            - DiamondLinuxAgent_starting
        PublicNetwork_start:
          node: PublicNetwork
          activity:
            delegate: start
        Graphite_starting:
          node: Graphite
          activity:
            set_state: starting
          on-success:
            - start_Graphite
        start_Graphite:
          node: Graphite
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - Graphite_started
        Graphite_started:
          node: Graphite
          activity:
            set_state: started
          on-success:
            - Grafana_starting
            - DiamondLinuxAgent_starting
    stop:
      steps:
        DiamondLinuxAgent_stopping:
          node: DiamondGrafana
          activity:
            set_state: stopping
          on-success:
            - stop_DiamondLinuxAgent
        stop_DiamondLinuxAgent:
          node: DiamondGrafana
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - DiamondLinuxAgent_stopped
        MonitoringCompute_stop:
          node: xGrafanaCompute
          activity:
            delegate: stop
        DiamondLinuxAgent_stopped:
          node: DiamondGrafana
          activity:
            set_state: stopped
          on-success:
            - MonitoringCompute_stop
        Grafana_stopping:
          node: Grafana
          activity:
            set_state: stopping
          on-success:
            - stop_Grafana
        stop_Grafana:
          node: Grafana
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - Grafana_stopped
        Grafana_stopped:
          node: Grafana
          activity:
            set_state: stopped
          on-success:
            - DiamondLinuxAgent_stopping
            - MonitoringCompute_stop
        PublicNetwork_stop:
          node: PublicNetwork
          activity:
            delegate: stop
        Graphite_stopping:
          node: Graphite
          activity:
            set_state: stopping
          on-success:
            - stop_Graphite
        stop_Graphite:
          node: Graphite
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - Graphite_stopped
        Graphite_stopped:
          node: Graphite
          activity:
            set_state: stopped
          on-success:
            - MonitoringCompute_stop
