tosca_definitions_version: alien_dsl_2_0_0

metadata:
  template_name: org.alien4cloud.mock.bash
  template_version: 2.1.0-SNAPSHOT
  template_author: Gandalfe

imports:
  - tosca-normative-types:1.0.0-ALIEN20
  - org.alien4cloud.mock.pub:2.1.0-SNAPSHOT

description: >
  Mock types with bash implementations.

# TODO: apache port attribute should be used by RegistryConfigurer, and Generic & GenericHost
node_types:

  org.alien4cloud.mock.bash.nodes.SleepingAtStopBashMock:
    description: |
      A software component that hosts MockComponent.
    derived_from: org.alien4cloud.mock.pub.nodes.AbstractMockHost
    interfaces:
      Standard:
        stop:
          inputs:
            duration: { get_property: [ SELF, duration ] }
            operation: "stop"
          implementation: scripts/operation.sh
    capabilities:
      mock_endpoint:
        type: org.alien4cloud.mock.bash.capabilities.BashComponentEndpoint
        occurrences: [0, unbounded]
    requirements:
      - mock_endpoint:
          capability: org.alien4cloud.mock.bash.capabilities.BashComponentEndpoint
          relationship: org.alien4cloud.mock.bash.relationships.BashComponentConnectToComponent
          occurrences: [0, unbounded]

  org.alien4cloud.mock.bash.nodes.MockWithRequiredProperty:
    description: |
      A software component that hosts MockComponent.
    derived_from: org.alien4cloud.mock.pub.nodes.AbstractMockHost
    properties:
      toto:
        type: string
    interfaces:
      Standard:
        stop:
          inputs:
            duration: { get_property: [ SELF, duration ] }
            operation: "stop"
          implementation: scripts/operation.sh
    capabilities:
      mock_endpoint:
        type: org.alien4cloud.mock.bash.capabilities.BashComponentEndpoint
        occurrences: [0, unbounded]
    requirements:
      - mock_endpoint:
          capability: org.alien4cloud.mock.bash.capabilities.BashComponentEndpoint
          relationship: org.alien4cloud.mock.bash.relationships.BashComponentConnectToComponent
          occurrences: [0, unbounded]

  org.alien4cloud.mock.bash.nodes.MiniBashFailFastMock:
    description: |
      A mock that implements juste minimum operations to fast start & stop.
    derived_from: org.alien4cloud.mock.pub.nodes.AbstractMockHost
    interfaces:
      Standard:
        start:
          inputs:
            operation: "create"
            duration: { get_property: [ SELF, duration ] }
            variation: { get_property: [ SELF, variation ] }
            weight: 20
            log_length: { get_property: [ SELF, log_length ] }
          implementation: scripts/fail.sh
    capabilities:
      mock_endpoint:
        type: org.alien4cloud.mock.bash.capabilities.BashComponentEndpoint
        occurrences: [0, unbounded]
    requirements:
      - mock_endpoint:
          capability: org.alien4cloud.mock.bash.capabilities.BashComponentEndpoint
          relationship: org.alien4cloud.mock.bash.relationships.BashComponentConnectToComponent
          occurrences: [0, unbounded]
    artifacts:
      - data:
          file: data/data.txt
          type: tosca.artifacts.File

  org.alien4cloud.mock.bash.nodes.MiniBashMockWithRequiredProperty:
    description: |
      A mock that implements juste minimum operations to fast start & stop.
    derived_from: org.alien4cloud.mock.pub.nodes.AbstractMockHost
    properties:
      my_required:
        type: string

  org.alien4cloud.mock.bash.nodes.MiniBashMock:
    description: |
      A mock that implements juste minimum operations to fast start & stop.
    derived_from: org.alien4cloud.mock.pub.nodes.AbstractMockHost
    interfaces:
      Standard:
        start:
          inputs:
            operation: "start"
            duration: { get_property: [ SELF, duration ] }
            variation: { get_property: [ SELF, variation ] }
            weight: 20
            log_length: { get_property: [ SELF, log_length ] }
          implementation: scripts/operation.sh
        stop:
          inputs:
            operation: "stop"
            duration: { get_property: [ SELF, duration ] }
            variation: { get_property: [ SELF, variation ] }
            weight: 20
            log_length: { get_property: [ SELF, log_length ] }
          implementation: scripts/operation.sh
    capabilities:
      mock_endpoint:
        type: org.alien4cloud.mock.bash.capabilities.BashComponentEndpoint
        occurrences: [0, unbounded]
    requirements:
      - mock_endpoint:
          capability: org.alien4cloud.mock.bash.capabilities.BashComponentEndpoint
          relationship: org.alien4cloud.mock.bash.relationships.BashComponentConnectToComponent
          occurrences: [0, unbounded]
    artifacts:
      - data:
          file: data/data.txt
          type: tosca.artifacts.File

  org.alien4cloud.mock.bash.nodes.FailAtStartBashMock:
    description: |
      Just fail at start.
    derived_from: org.alien4cloud.mock.pub.nodes.AbstractMockHost
    interfaces:
      Standard:
        create:
          inputs:
            operation: "create"
            duration: { get_property: [ SELF, duration ] }
          implementation: scripts/operation.sh
        configure:
          inputs:
            operation: "configure"
            duration: { get_property: [ SELF, duration ] }
          implementation: scripts/operation.sh
        start:
          inputs:
            operation: "start"
            duration: { get_property: [ SELF, duration ] }
          implementation: scripts/fail.sh
        stop:
          inputs:
            operation: "stop"
            duration: { get_property: [ SELF, duration ] }
          implementation: scripts/operation.sh
        delete:
          inputs:
            operation: "delete"
            duration: { get_property: [ SELF, duration ] }
          implementation: scripts/operation.sh
    capabilities:
      mock_endpoint:
        type: org.alien4cloud.mock.bash.capabilities.BashComponentEndpoint
        occurrences: [0, unbounded]
    requirements:
      - mock_endpoint:
          capability: org.alien4cloud.mock.bash.capabilities.BashComponentEndpoint
          relationship: org.alien4cloud.mock.bash.relationships.BashComponentConnectToComponent
          occurrences: [0, unbounded]
    artifacts:
      - data:
          file: data/data.txt
          type: tosca.artifacts.File

  org.alien4cloud.mock.bash.nodes.FailAtStopBashMock:
    description: |
      A software component that hosts MockComponent.
    derived_from: org.alien4cloud.mock.pub.nodes.AbstractMockHost
    interfaces:
      Standard:
        create:
          inputs:
            operation: "create"
            duration: { get_property: [ SELF, duration ] }
          implementation: scripts/operation.sh
        configure:
          inputs:
            operation: "configure"
            duration: { get_property: [ SELF, duration ] }
          implementation: scripts/operation.sh
        start:
          inputs:
            operation: "start"
            duration: { get_property: [ SELF, duration ] }
          implementation: scripts/operation.sh
        stop:
          inputs:
            operation: "stop"
            duration: { get_property: [ SELF, duration ] }
          implementation: scripts/fail.sh
        delete:
          inputs:
            operation: "delete"
            duration: { get_property: [ SELF, duration ] }
          implementation: scripts/operation.sh
    capabilities:
      mock_endpoint:
        type: org.alien4cloud.mock.bash.capabilities.BashComponentEndpoint
        occurrences: [0, unbounded]
    requirements:
      - mock_endpoint:
          capability: org.alien4cloud.mock.bash.capabilities.BashComponentEndpoint
          relationship: org.alien4cloud.mock.bash.relationships.BashComponentConnectToComponent
          occurrences: [0, unbounded]
    artifacts:
      - data:
          file: data/data.txt
          type: tosca.artifacts.File


  org.alien4cloud.mock.bash.nodes.BashMock:
    description: |
      A software component that hosts MockComponent.
    derived_from: org.alien4cloud.mock.pub.nodes.AbstractMockHost
    attributes:
      att_ppid: { get_operation_output: [ SELF, Standard, create, ATT_PPID ] }
      att_hostname: { get_operation_output: [ SELF, Standard, create, ATT_HOSTNAME ] }
      att_pwd: { get_operation_output: [ SELF, Standard, create, ATT_PWD ] }
      att_date: { get_operation_output: [ SELF, Standard, configure, ATT_DATE ] }
      att_ssh_connection: { get_operation_output: [ SELF, Standard, configure, ATT_SSH_CONNECTION ] }
      att_logname: { get_operation_output: [ SELF, Standard, configure, ATT_LOGNAME ] }
      att_current_pid: { get_operation_output: [ SELF, Standard, start, ATT_CURRENT_PID ] }
      att_home: { get_operation_output: [ SELF, Standard, start, ATT_HOME ] }
      att_ssh_client: { get_operation_output: [ SELF, Standard, start, ATT_SSH_CLIENT ] }
    interfaces:
      Standard:
        create:
          inputs:
            operation: "create"
            duration: { get_property: [ SELF, duration ] }
          implementation: scripts/operation.sh
        configure:
          inputs:
            operation: "configure"
            duration: { get_property: [ SELF, duration ] }
          implementation: scripts/operation.sh
        start:
          inputs:
            operation: "start"
            duration: { get_property: [ SELF, duration ] }
          implementation: scripts/operation.sh
        stop:
          inputs:
            operation: "stop"
            duration: { get_property: [ SELF, duration ] }
          implementation: scripts/operation.sh
        delete:
          inputs:
            operation: "delete"
            duration: { get_property: [ SELF, duration ] }
          implementation: scripts/operation.sh
    capabilities:
      mock_endpoint:
        type: org.alien4cloud.mock.bash.capabilities.BashComponentEndpoint
        occurrences: [0, unbounded]
    requirements:
      - mock_endpoint:
          capability: org.alien4cloud.mock.bash.capabilities.BashComponentEndpoint
          relationship: org.alien4cloud.mock.bash.relationships.BashComponentConnectToComponent
          occurrences: [0, unbounded]
    artifacts:
      - data:
          file: data/data.txt
          type: tosca.artifacts.File

  org.alien4cloud.mock.bash.nodes.BashMockWithManyArtifacts:
    description: |
      A software component that hosts MockComponent.
    derived_from: org.alien4cloud.mock.pub.nodes.AbstractMockHost
    interfaces:
      Standard:
        create:
          inputs:
            operation: "create"
            duration: { get_property: [ SELF, duration ] }
          implementation: scripts/operation.sh
    capabilities:
      mock_endpoint:
        type: org.alien4cloud.mock.bash.capabilities.BashComponentEndpoint
        occurrences: [0, unbounded]
    requirements:
      - mock_endpoint:
          capability: org.alien4cloud.mock.bash.capabilities.BashComponentEndpoint
          relationship: org.alien4cloud.mock.bash.relationships.BashComponentConnectToComponent
          occurrences: [0, unbounded]
    artifacts:
      - data0:
          file: data/data.txt
          type: tosca.artifacts.File
      - data1:
          file: data/data.txt
          type: tosca.artifacts.File
      - data2:
          file: data/data.txt
          type: tosca.artifacts.File
      - data3:
          file: data/data.txt
          type: tosca.artifacts.File


  org.alien4cloud.mock.bash.nodes.BashMockWithProperties:
    description: |
      A software component that hosts MockComponent.
    derived_from: org.alien4cloud.mock.pub.nodes.AbstractMockHost
    properties:
      type_name:
        type: string
        description: A pattern constraint
        default: abc
        required: false
        # constraints:
        #   - pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
      name:
        type: integer
        description:
        default: 2
        constraints:
          - equal: 2
      is_secure:
        type: boolean
        description: a boolean property.
        required: true
      port:
        type: integer
        description: an in range constraint property.
        required: true
        default: 9300
        constraints:
          - in_range: [ 1, 65535 ]
      gender:
        type: string
        required: true
        description: a valid vales constraint property without default value.
        constraints:
            - valid_values: [male, female]
      memory:
        type: scalar-unit.size
        description: a valid vales constraint property without default value.
      frequency:
        type: scalar-unit.frequency
        default: 3 GHz
        description: a valid vales constraint property without default value.
      time:
        type: scalar-unit.time
        description: a valid vales constraint property without default value.
      class:
        type: string
        required: true
        description: a valid vales constraint property.
        constraints:
            - valid_values: [db.t1.micro , db.m1.small , db.m1.medium , db.m1.large , db.m1.xlarge , db.m2.xlarge , db.m2.2xlarge , db.m2.4xlarge , db.cr1.8xlarge , db.m3.medium , db.m3.large , db.m3.xlarge , db.m3.2xlarge , db.r3.large , db.r3.xlarge , db.r3.2xlarge , db.r3.4xlarge , db.r3.8xlarge , db.t2.micro , db.t2.small , db.t2.medium , db.t2.large , db.m4.large , db.m4.xlarge , db.m4.2xlarge , db.m4.4xlarge , db.m4.10xlarge]
        default: db.t2.micro
    interfaces:
      Standard:
        create:
          inputs:
            operation: "create"
            duration: { get_property: [ SELF, duration ] }
          implementation: scripts/operation.sh
    capabilities:
      mock_endpoint:
        type: org.alien4cloud.mock.bash.capabilities.BashComponentEndpoint
        occurrences: [0, unbounded]
    requirements:
      - mock_endpoint:
          capability: org.alien4cloud.mock.bash.capabilities.BashComponentEndpoint
          relationship: org.alien4cloud.mock.bash.relationships.BashComponentConnectToComponent
          occurrences: [0, unbounded]
    artifacts:
      - data:
          file: data/data.txt
          type: tosca.artifacts.File

relationship_types:

  org.alien4cloud.mock.bash.relationships.BashComponentConnectToComponent:
    derived_from: org.alien4cloud.mock.pub.relationships.AbstractComponentConnectToComponent
    valid_target_types: [ org.alien4cloud.mock.bash.capabilities.BashComponentEndpoint ]
    interfaces:
      configure:
        pre_configure_source:
          inputs:
            operation: "pre_configure_source"
            duration: { get_property: [ SOURCE, duration ] }
          implementation: scripts/relation_operation.sh
        pre_configure_target:
          inputs:
            operation: "pre_configure_target"
            duration: { get_property: [ SOURCE, duration ] }
          implementation: scripts/relation_operation.sh
        post_configure_source:
          inputs:
            operation: "post_configure_source"
            duration: { get_property: [ SOURCE, duration ] }
          implementation: scripts/relation_operation.sh
        post_configure_target:
          inputs:
            operation: "post_configure_target"
            duration: { get_property: [ SOURCE, duration ] }
          implementation: scripts/relation_operation.sh
        add_target:
          inputs:
            operation: "add_target"
            duration: { get_property: [ SOURCE, duration ] }
          implementation: scripts/relation_operation.sh
        add_source:
          inputs:
            operation: "add_source"
            duration: { get_property: [ SOURCE, duration ] }
          implementation: scripts/relation_operation.sh
        remove_target:
          inputs:
            operation: "remove_target"
            duration: { get_property: [ SOURCE, duration ] }
          implementation: scripts/relation_operation.sh
        remove_source:
          inputs:
            operation: "remove_source"
            duration: { get_property: [ SOURCE, duration ] }
          implementation: scripts/relation_operation.sh

capability_types:

  org.alien4cloud.mock.bash.capabilities.BashComponentEndpoint:
    derived_from: org.alien4cloud.mock.pub.capabilities.AbstractComponentEndpoint
