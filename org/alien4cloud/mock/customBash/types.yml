tosca_definitions_version: alien_dsl_2_0_0

metadata:
  template_name: org.alien4cloud.mock.customBash
  template_version: 2.2.0-SNAPSHOT
  template_author: FCH

imports:
  - tosca-normative-types:1.0.0-ALIEN20
  - org.alien4cloud.mock.pub:2.2.0-SNAPSHOT
  - org.alien4cloud.mock.bash:2.2.0-SNAPSHOT    
  
description: "2 Mock types with bash implementations and custom commands."

node_types:
  org.alien4cloud.mock.bash.nodes.CustomCommandBashMock:
    description: "A mock type derived_from standard bash mock and with a custom interface"
    derived_from: org.alien4cloud.mock.bash.nodes.BashMock
    interfaces:
      my_custom_interface:
        my_custom_op:
          inputs:
            operation: "my_custom_op"
            duration: { get_property: [SELF, duration] }
            comment: { get_property: [SELF, comment] }
          implementation: scripts/cust.sh
      Standard:
        create:
          inputs:
            operation: create
            duration: { get_property: [SELF, duration] }
          implementation: scripts/operation.sh
  org.alien4cloud.mock.bash.nodes.CustomCommandFailedBashMock:
    description: "A software component that hosts MockComponent with 3 operations, standard create,standard stop that fails,   a fail and sucess custom operation."
    derived_from: org.alien4cloud.mock.bash.nodes.BashMock
    interfaces:
      my_custom_interface:
        my_custom_op:
          inputs:
            operation: "my_custom_op"
            duration: { get_property: [SELF, duration] }
            comment: { get_property: [SELF, comment] }
          implementation: scripts/cust.sh
        my_custom_fail_op:
          inputs:
            operation: "my_custom_fail_op"
            duration: { get_property: [SELF, duration] }
            comment: { get_property: [SELF, comment] }
          implementation: scripts/fail.sh          
      Standard:
        create:
          inputs:
            operation: create
            duration: { get_property: [SELF, duration] }
          implementation: scripts/operation.sh
        stop:
          inputs:
            operation: stop
            duration: { get_property: [SELF, duration] }
          implementation: scripts/fail.sh           
