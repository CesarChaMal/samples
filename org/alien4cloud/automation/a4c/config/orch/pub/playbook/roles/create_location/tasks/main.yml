---

# FIXME (remove)
# read orchestratorId from host attribute file
# - name: Check relationship inputs exists
#   stat: path="/tmp/a4cPlaybookRegistry/{{ HOST }}/attributes/orchestratorId"
#   register: orchestratorId_file
# - name: read relationship inputs
#   command: /bin/cat "/tmp/a4cPlaybookRegistry/{{ HOST }}/attributes/orchestratorId"
#   register: orchestratorId_content
#   when: orchestratorId_file.stat.exists
# - set_fact:
#     orchestratorId: "{{ orchestratorId_content.stdout_lines[0] }}"
#   when: orchestratorId_file.stat.exists and orchestratorId_content.stdout_lines|length > 0


- name: login
  uri:
    url: "{{ alien_url }}/login?username={{ alien_user }}&password={{ alien_password }}&submit=Login"
    method: POST
    return_content: yes
    status_code: 302
    headers:
      Content-Type: "application/x-www-form-urlencoded"
  register: login

- set_fact:
    session_id: "{{ login.set_cookie.split(';')[0] }}"

- name: Create Location
  uri:
    url: "{{ alien_url }}/rest/latest/orchestrators/{{ orchestratorId }}/locations"
    method: POST
    return_content: yes
    HEADER_cookie: "{{ session_id }}"
    body:
      name: "{{ name }}"
      infrastructureType: "{{ type }}"
    body_format: json
    status_code: 201
  register: result

- set_fact:
    content: "{{ result.content }}"

- set_fact:
    locationId: "{{ content.data }}"

# FIXME: remove
# ugly workarround to have attribute from host
# - set_fact:
#     file_path: "/tmp/a4cPlaybookRegistry/{{ NODE }}/attributes/locationId"
#   when: locationId is defined
# - set_fact:
#     file_dir: "{{ file_path | dirname }}"
#   when: locationId is defined
# - file:
#     path: "{{ file_dir }}"
#     state: directory
#   when: locationId is defined
# - name: "Echo <{{ locationId }}> into {{ file_path }}"
#   shell: "echo '{{ locationId }}' > {{ file_path }}"
#   when: locationId is defined
