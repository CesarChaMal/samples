tosca_definitions_version: alien_dsl_1_4_0

metadata:
  template_name: org.alien4cloud.automation.topologies.a4c_cfy34_aws
  template_version: 1.4.0-SNAPSHOT
  template_author: alien4cloud

description: >
  A4C & CFY 3.4 manager (with Ansible) configured for AWS.
  Since the v3 orchestrator plugin is not embeded in A4C dist you need to provide it as input artifact.

imports:
  - org.alien4cloud.storage.elasticsearch.ubuntu:1.4.0-SNAPSHOT
  - org.alien4cloud.automation.a4c.config.orch.cfy:1.4.0-SNAPSHOT
  - org.alien4cloud.automation.cloudify.manager.pub:1.4.0-SNAPSHOT
  - org.alien4cloud.automation.cloudify.manager.v4:1.4.0-SNAPSHOT
  - tosca-normative-types:1.0.0-ALIEN14
  - org.alien4cloud.automation.cloudify.manager.v3:1.4.0-SNAPSHOT
  - alien-base-types:1.4.0-SNAPSHOT
  - org.alien4cloud.lang.java.pub:1.4.0-SNAPSHOT
  - org.alien4cloud.lang.java.jmx.jolokia:1.4.0-SNAPSHOT
  - org.alien4cloud.automation.a4c.config.orch.pub:1.4.0-SNAPSHOT
  - org.alien4cloud.automation.a4c.webapp:1.4.0-SNAPSHOT
  - org.alien4cloud.lang.java.jdk.linux:1.4.0-SNAPSHOT
  - org.alien4cloud.storage.elasticsearch.pub:1.4.0-SNAPSHOT
  - org.alien4cloud.automation.cloudify.hostpool.pub:1.4.0-SNAPSHOT
  - org.alien4cloud.automation.cloudify.ansible:1.4.0-SNAPSHOT
  - org.alien4cloud.automation.a4c.pub:1.4.0-SNAPSHOT
  - org.alien4cloud.db.postgresql.pub:1.4.0-SNAPSHOT
  - org.alien4cloud.messaging.rabbitmq.pub:1.4.0-SNAPSHOT

repositories:
  FC Nexus private snapshot:
    url: https://fastconnect.org/maven/content/repositories/fastconnect-snapshot
    type: maven

topology_template:

  description: >
    A4C & CFY 3.4 manager (with Ansible) configured for AWS.
    Since the v3 orchestrator plugin is not embeded in A4C dist you need to provide it as input artifact.

  inputs:
    aws_region:
      type: string
      required: true
      default: "eu-west-1"
      description: "The aws region to use to start aws instances."
    ssh_key_filename:
      type: string
      required: true
      description: "Name of the file in which we will store the manager ssh key (see required artifact)."
    aws_access_key:
      type: string
      required: true
      description: "The aws access key of the account to use to start aws instances."
    key_content:
      type: string
      required: true
      description: "The AWS key (mulitiline content)"
    keypair_name:
      type: string
      required: false
      description: "Optional name of the key as known by the iaas (in case of iaas key)."
    aws_secret_key:
      type: string
      required: true
      description: "The aws secret key of the account to use to start aws instances."
    agent_security_groups:
      type: string
      required: true
      default: "sg-cffd98b6"
      description: "Comma separated list of security groups to use for agents."
    a4c_version:
      type: version
      required: true
      description: "The version of A4C (important in create stage)."
  input_artifacts:
    orchestrator_plugin:
        type: tosca.artifacts.File
    aws_key_file:
        type: tosca.artifacts.File
  node_templates:
    A4C_JDK:
      type: org.alien4cloud.lang.java.jdk.linux.nodes.OracleJDK
      properties:
        java_url: "https://edelivery.oracle.com/otn-pub/java/jdk/8u131-b11/d54c1d3a095b4ff2b6607d096fa80163/jdk-8u131-linux-x64.tar.gz"
        java_home: "/opt/java"
        component_version: "1.8.0-131-b11"
      requirements:
        - host:
            node: A4C_Compute
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    A4C_Compute:
      type: tosca.nodes.Compute
      capabilities:
        os:
          properties:
            architecture: "x86_64"
            type: linux
            distribution: ubuntu
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1
        endpoint:
          properties:
            secure: true
            protocol: tcp
            network_name: PRIVATE
            initiator: source
    A4C:
      type: org.alien4cloud.automation.a4c.webapp.nodes.Alien4Cloud
      properties:
        context_root: "/"
        app_args: "--spring.profiles.active=security-demo,noApiDoc"
        component_version: { get_input: a4c_version }
        data_dir: "/opt/alien4coud/data"
      requirements:
        - elasticsearch:
            node: A4C_ElasticSearch
            capability: org.alien4cloud.storage.elasticsearch.pub.capabilities.ElasticSearchTransportAPI
            relationship: org.alien4cloud.automation.a4c.webapp.relationships.AlienConnectToElasticSearch
        - java:
            node: A4C_JDK
            capability: org.alien4cloud.lang.java.pub.capabilities.JDK
            relationship: org.alien4cloud.lang.java.pub.relationships.JavaSoftwareHostedOnJDK
      capabilities:
        rest:
          properties:
            user: admin
            password: admin
            port: 8080
            protocol: http
            secure: false
            network_name: PRIVATE
            initiator: source
        jolokia:
          properties:
            jolokia_port: 8778
      artifacts:
        alien_dist:
          file: alien4cloud:alien4cloud-premium-dist:1.4.0-SNAPSHOT:dist@tar.gz
          type: tosca.artifacts.File
          repository: FC Nexus private snapshot
    A4C_ElasticSearch:
      type: org.alien4cloud.storage.elasticsearch.ubuntu.nodes.ElasticSearch
      properties:
        component_version: "1.7.0"
        elasticsearch_url: "https://download.elastic.co/elasticsearch/elasticsearch/elasticsearch-1.7.0.deb"
        cluster_name: escluster
      requirements:
        - java:
            node: A4C_JDK
            capability: org.alien4cloud.lang.java.pub.capabilities.JDK
            relationship: org.alien4cloud.lang.java.pub.relationships.JavaSoftwareHostedOnJDK
      capabilities:
        elasticsearch:
          properties:
            port: 9300
            protocol: tcp
            secure: false
            network_name: PRIVATE
            initiator: source
        http:
          properties:
            port: 9200
            protocol: http
            secure: false
            network_name: PRIVATE
            initiator: source
    CFY_Compute:
      type: tosca.nodes.Compute
      capabilities:
        host:
          properties:
            num_cpus: 4
            mem_size: "4 GIB"
        os:
          properties:
            architecture: "x86_64"
            type: linux
            distribution: centos
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1
        endpoint:
          properties:
            secure: true
            protocol: tcp
            network_name: PRIVATE
            initiator: source
    Cloudify3AwsConfiguration:
      type: org.alien4cloud.automation.cloudify.manager.v3.nodes.Cloudify3AwsConfiguration
      properties:
        aws_access_key: { get_input: aws_access_key }
        aws_secret_key: { get_input: aws_secret_key }
        aws_region: { get_input: aws_region }
        agent_security_groups: { get_input: agent_security_groups }
      requirements:
        - cfy_manager:
            node: CFY3Manager
            capability: org.alien4cloud.automation.cloudify.manager.pub.capabilities.CloudifyManagerContainer
            relationship: tosca.relationships.HostedOn
    CFY3Manager:
      type: org.alien4cloud.automation.cloudify.manager.v3.nodes.Cloudify3Manager
      properties:
        ssh_user: "ec2-user"
        ssh_key_filename: { get_input: ssh_key_filename }
        keypair_name: { get_input: keypair_name }
        agents_user: ubuntu
        admin_username: admin
        admin_password: admin
        component_version: "3.4.2"
      requirements:
        - host:
            node: CFY_Compute
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
      capabilities:
        elastic_search:
          properties:
            port: 9200
            protocol: http
            secure: false
            network_name: PRIVATE
            initiator: source
        rabbitmq_management:
          properties:
            user: cloudify
            password: c10udify
            protocol: http
            port: 15672
            secure: false
            network_name: PRIVATE
            initiator: source
        cloudify_api_v3:
          properties:
            protocol: https
            port: 443
            secure: false
            network_name: PRIVATE
            initiator: source
      artifacts:
        key_file:
          file: { get_input_artifact: aws_key_file }
          type: tosca.artifacts.File
    Ansible4CloudifyManager:
      type: org.alien4cloud.automation.cloudify.ansible.nodes.Ansible4CloudifyManager
      properties:
        component_version: "2.0.1.0"
      requirements:
        - host:
            node: CFY_Compute
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    OrchestratorConfigurator:
      type: org.alien4cloud.automation.a4c.config.orch.cfy.nodes.OrchestratorPluginConfigurator
      properties:
        name: CFYOrchestrator
        pluginId: "alien-cloudify-3-orchestrator-premium"
        pluginBean: "cloudify-orchestrator"
      requirements:
        - cfy:
            node: CFY3Manager
            capability: org.alien4cloud.automation.cloudify.manager.pub.capabilities.CloudifyAPIv3
            relationship: org.alien4cloud.automation.a4c.config.orch.cfy.relationships.ConnectsToCfy
        - alien:
            node: A4C
            capability: org.alien4cloud.automation.a4c.pub.capabilities.A4cRestApi
            relationship: org.alien4cloud.automation.a4c.config.orch.pub.relationships.ConnectsToA4C
      artifacts:
        orchestrator_plugin:
          file: { get_input_artifact: orchestrator_plugin }
          type: tosca.artifacts.File
  outputs:
    A4C_alien_url:
      value: { get_attribute: [ A4C, alien_url ] }
    CFY3Manager_manager_url:
      value: { get_attribute: [ CFY3Manager, manager_url ] }
  workflows:
    install:
      steps:
        Compute_install:
          node: A4C_Compute
          activity:
            delegate: install
          on-success:
            - ElasticSearch_configuring
            - Alien4Cloud_configuring
            - OracleJDK_initial
        OracleJDK_initial:
          node: A4C_JDK
          activity:
            set_state: initial
          on-success:
            - OracleJDK_creating
        OracleJDK_creating:
          node: A4C_JDK
          activity:
            set_state: creating
          on-success:
            - create_OracleJDK
        create_OracleJDK:
          node: A4C_JDK
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.create
          on-success:
            - OracleJDK_created
        OracleJDK_created:
          node: A4C_JDK
          activity:
            set_state: created
          on-success:
            - OracleJDK_configuring
        OracleJDK_configuring:
          node: A4C_JDK
          activity:
            set_state: configuring
          on-success:
            - configure_OracleJDK
        configure_OracleJDK:
          node: A4C_JDK
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.configure
          on-success:
            - OracleJDK_configured
        OracleJDK_configured:
          node: A4C_JDK
          activity:
            set_state: configured
          on-success:
            - OracleJDK_starting
        OracleJDK_starting:
          node: A4C_JDK
          activity:
            set_state: starting
          on-success:
            - start_OracleJDK
        start_OracleJDK:
          node: A4C_JDK
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - OracleJDK_started
        OracleJDK_started:
          node: A4C_JDK
          activity:
            set_state: started
          on-success:
            - Alien4Cloud_initial
            - ElasticSearch_initial
        Alien4Cloud_initial:
          node: A4C
          activity:
            set_state: initial
          on-success:
            - Alien4Cloud_creating
        Alien4Cloud_creating:
          node: A4C
          activity:
            set_state: creating
          on-success:
            - create_Alien4Cloud
        create_Alien4Cloud:
          node: A4C
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.create
          on-success:
            - Alien4Cloud_created
        Alien4Cloud_created:
          node: A4C
          activity:
            set_state: created
          on-success:
            - Alien4Cloud_configuring
            - ElasticSearch_configuring
        Alien4Cloud_configuring:
          node: A4C
          activity:
            set_state: configuring
          on-success:
            - configure_Alien4Cloud
        configure_Alien4Cloud:
          node: A4C
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.configure
          on-success:
            - Alien4Cloud_configured
        Alien4Cloud_configured:
          node: A4C
          activity:
            set_state: configured
          on-success:
            - Alien4Cloud_starting
        Alien4Cloud_starting:
          node: A4C
          activity:
            set_state: starting
          on-success:
            - start_Alien4Cloud
        start_Alien4Cloud:
          node: A4C
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - Alien4Cloud_started
        Alien4Cloud_started:
          node: A4C
          activity:
            set_state: started
          on-success:
            - OrchestratorConfigurator_configuring
            - Ansible4CloudifyManager_initial
        ElasticSearch_initial:
          node: A4C_ElasticSearch
          activity:
            set_state: initial
          on-success:
            - ElasticSearch_creating
        ElasticSearch_creating:
          node: A4C_ElasticSearch
          activity:
            set_state: creating
          on-success:
            - create_ElasticSearch
        create_ElasticSearch:
          node: A4C_ElasticSearch
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.create
          on-success:
            - ElasticSearch_created
        ElasticSearch_created:
          node: A4C_ElasticSearch
          activity:
            set_state: created
          on-success:
            - Alien4Cloud_initial
            - ElasticSearch_configuring
        ElasticSearch_configuring:
          node: A4C_ElasticSearch
          activity:
            set_state: configuring
          on-success:
            - configure_ElasticSearch
        configure_ElasticSearch:
          node: A4C_ElasticSearch
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.configure
          on-success:
            - ElasticSearch_configured
        ElasticSearch_configured:
          node: A4C_ElasticSearch
          activity:
            set_state: configured
          on-success:
            - ElasticSearch_starting
        ElasticSearch_starting:
          node: A4C_ElasticSearch
          activity:
            set_state: starting
          on-success:
            - start_ElasticSearch
        start_ElasticSearch:
          node: A4C_ElasticSearch
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - ElasticSearch_started
        ElasticSearch_started:
          node: A4C_ElasticSearch
          activity:
            set_state: started
          on-success:
            - Alien4Cloud_configuring
        Compute_install_1:
          node: CFY_Compute
          activity:
            delegate: install
          on-success:
            - Cloudify3Manager_configuring
            - Ansible4CloudifyManager_initial
            - Cloudify3Manager_initial
        Cloudify3Manager_initial:
          node: CFY3Manager
          activity:
            set_state: initial
          on-success:
            - Cloudify3Manager_creating
        Cloudify3Manager_creating:
          node: CFY3Manager
          activity:
            set_state: creating
          on-success:
            - create_Cloudify3Manager
        create_Cloudify3Manager:
          node: CFY3Manager
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.create
          on-success:
            - Cloudify3Manager_created
        Cloudify3Manager_created:
          node: CFY3Manager
          activity:
            set_state: created
          on-success:
            - Cloudify3Manager_configuring
            - Ansible4CloudifyManager_initial
        Cloudify3Manager_configuring:
          node: CFY3Manager
          activity:
            set_state: configuring
          on-success:
            - configure_Cloudify3Manager
        configure_Cloudify3Manager:
          node: CFY3Manager
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.configure
          on-success:
            - Cloudify3Manager_configured
        Cloudify3Manager_configured:
          node: CFY3Manager
          activity:
            set_state: configured
          on-success:
            - Cloudify3Manager_starting
        Cloudify3Manager_starting:
          node: CFY3Manager
          activity:
            set_state: starting
          on-success:
            - start_Cloudify3Manager
        start_Cloudify3Manager:
          node: CFY3Manager
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - Cloudify3Manager_started
        Cloudify3Manager_started:
          node: CFY3Manager
          activity:
            set_state: started
          on-success:
            - Cloudify3AwsConfiguration_initial
            - OrchestratorConfigurator_configuring
            - Ansible4CloudifyManager_initial
        Cloudify3AwsConfiguration_initial:
          node: Cloudify3AwsConfiguration
          activity:
            set_state: initial
          on-success:
            - Cloudify3AwsConfiguration_creating
        Cloudify3AwsConfiguration_creating:
          node: Cloudify3AwsConfiguration
          activity:
            set_state: creating
          on-success:
            - create_Cloudify3AwsConfiguration
        create_Cloudify3AwsConfiguration:
          node: Cloudify3AwsConfiguration
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.create
          on-success:
            - Cloudify3AwsConfiguration_created
        Cloudify3AwsConfiguration_created:
          node: Cloudify3AwsConfiguration
          activity:
            set_state: created
          on-success:
            - Cloudify3AwsConfiguration_configuring
        Cloudify3AwsConfiguration_configuring:
          node: Cloudify3AwsConfiguration
          activity:
            set_state: configuring
          on-success:
            - configure_Cloudify3AwsConfiguration
        configure_Cloudify3AwsConfiguration:
          node: Cloudify3AwsConfiguration
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.configure
          on-success:
            - Cloudify3AwsConfiguration_configured
        Cloudify3AwsConfiguration_configured:
          node: Cloudify3AwsConfiguration
          activity:
            set_state: configured
          on-success:
            - Cloudify3AwsConfiguration_starting
        Cloudify3AwsConfiguration_starting:
          node: Cloudify3AwsConfiguration
          activity:
            set_state: starting
          on-success:
            - start_Cloudify3AwsConfiguration
        start_Cloudify3AwsConfiguration:
          node: Cloudify3AwsConfiguration
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - Cloudify3AwsConfiguration_started
        Cloudify3AwsConfiguration_started:
          node: Cloudify3AwsConfiguration
          activity:
            set_state: started
          on-success:
            - Ansible4CloudifyManager_initial
        Ansible4CloudifyManager_initial:
          node: Ansible4CloudifyManager
          activity:
            set_state: initial
          on-success:
            - Ansible4CloudifyManager_creating
        Ansible4CloudifyManager_creating:
          node: Ansible4CloudifyManager
          activity:
            set_state: creating
          on-success:
            - create_Ansible4CloudifyManager
        create_Ansible4CloudifyManager:
          node: Ansible4CloudifyManager
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.create
          on-success:
            - Ansible4CloudifyManager_created
        Ansible4CloudifyManager_created:
          node: Ansible4CloudifyManager
          activity:
            set_state: created
          on-success:
            - Ansible4CloudifyManager_configuring
        Ansible4CloudifyManager_configuring:
          node: Ansible4CloudifyManager
          activity:
            set_state: configuring
          on-success:
            - configure_Ansible4CloudifyManager
        configure_Ansible4CloudifyManager:
          node: Ansible4CloudifyManager
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.configure
          on-success:
            - Ansible4CloudifyManager_configured
        Ansible4CloudifyManager_configured:
          node: Ansible4CloudifyManager
          activity:
            set_state: configured
          on-success:
            - Ansible4CloudifyManager_starting
        Ansible4CloudifyManager_starting:
          node: Ansible4CloudifyManager
          activity:
            set_state: starting
          on-success:
            - start_Ansible4CloudifyManager
        start_Ansible4CloudifyManager:
          node: Ansible4CloudifyManager
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - Ansible4CloudifyManager_started
        Ansible4CloudifyManager_started:
          node: Ansible4CloudifyManager
          activity:
            set_state: started
        OrchestratorConfigurator_initial:
          node: OrchestratorConfigurator
          activity:
            set_state: initial
          on-success:
            - OrchestratorConfigurator_creating
        OrchestratorConfigurator_creating:
          node: OrchestratorConfigurator
          activity:
            set_state: creating
          on-success:
            - OrchestratorConfigurator_created
        OrchestratorConfigurator_created:
          node: OrchestratorConfigurator
          activity:
            set_state: created
          on-success:
            - OrchestratorConfigurator_configuring
            - Alien4Cloud_configuring
            - Cloudify3Manager_configuring
            - Ansible4CloudifyManager_initial
        OrchestratorConfigurator_configuring:
          node: OrchestratorConfigurator
          activity:
            set_state: configuring
          on-success:
            - configure_OrchestratorConfigurator
        configure_OrchestratorConfigurator:
          node: OrchestratorConfigurator
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.configure
          on-success:
            - OrchestratorConfigurator_configured
        OrchestratorConfigurator_configured:
          node: OrchestratorConfigurator
          activity:
            set_state: configured
          on-success:
            - OrchestratorConfigurator_starting
        OrchestratorConfigurator_starting:
          node: OrchestratorConfigurator
          activity:
            set_state: starting
          on-success:
            - start_OrchestratorConfigurator
        start_OrchestratorConfigurator:
          node: OrchestratorConfigurator
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - OrchestratorConfigurator_started
        OrchestratorConfigurator_started:
          node: OrchestratorConfigurator
          activity:
            set_state: started
          on-success:
            - Ansible4CloudifyManager_initial
    uninstall:
      steps:
        Compute_uninstall:
          node: A4C_Compute
          activity:
            delegate: uninstall
        OracleJDK_stopping:
          node: A4C_JDK
          activity:
            set_state: stopping
          on-success:
            - stop_OracleJDK
        stop_OracleJDK:
          node: A4C_JDK
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - OracleJDK_stopped
        OracleJDK_stopped:
          node: A4C_JDK
          activity:
            set_state: stopped
          on-success:
            - OracleJDK_deleting
        OracleJDK_deleting:
          node: A4C_JDK
          activity:
            set_state: deleting
          on-success:
            - delete_OracleJDK
        delete_OracleJDK:
          node: A4C_JDK
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.delete
          on-success:
            - OracleJDK_deleted
        OracleJDK_deleted:
          node: A4C_JDK
          activity:
            set_state: deleted
          on-success:
            - Compute_uninstall
        Alien4Cloud_stopping:
          node: A4C
          activity:
            set_state: stopping
          on-success:
            - stop_Alien4Cloud
        stop_Alien4Cloud:
          node: A4C
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - Alien4Cloud_stopped
        Alien4Cloud_stopped:
          node: A4C
          activity:
            set_state: stopped
          on-success:
            - ElasticSearch_stopping
            - Alien4Cloud_deleting
        Alien4Cloud_deleting:
          node: A4C
          activity:
            set_state: deleting
          on-success:
            - delete_Alien4Cloud
        delete_Alien4Cloud:
          node: A4C
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.delete
          on-success:
            - Alien4Cloud_deleted
        Alien4Cloud_deleted:
          node: A4C
          activity:
            set_state: deleted
          on-success:
            - OracleJDK_stopping
            - ElasticSearch_stopping
        ElasticSearch_stopping:
          node: A4C_ElasticSearch
          activity:
            set_state: stopping
          on-success:
            - stop_ElasticSearch
        stop_ElasticSearch:
          node: A4C_ElasticSearch
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - ElasticSearch_stopped
        ElasticSearch_stopped:
          node: A4C_ElasticSearch
          activity:
            set_state: stopped
          on-success:
            - ElasticSearch_deleting
        ElasticSearch_deleting:
          node: A4C_ElasticSearch
          activity:
            set_state: deleting
          on-success:
            - delete_ElasticSearch
        delete_ElasticSearch:
          node: A4C_ElasticSearch
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.delete
          on-success:
            - ElasticSearch_deleted
        ElasticSearch_deleted:
          node: A4C_ElasticSearch
          activity:
            set_state: deleted
          on-success:
            - OracleJDK_stopping
        Compute_uninstall_1:
          node: CFY_Compute
          activity:
            delegate: uninstall
        Cloudify3Manager_stopping:
          node: CFY3Manager
          activity:
            set_state: stopping
          on-success:
            - stop_Cloudify3Manager
        stop_Cloudify3Manager:
          node: CFY3Manager
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - Cloudify3Manager_stopped
        Cloudify3Manager_stopped:
          node: CFY3Manager
          activity:
            set_state: stopped
          on-success:
            - Cloudify3Manager_deleting
        Cloudify3Manager_deleting:
          node: CFY3Manager
          activity:
            set_state: deleting
          on-success:
            - delete_Cloudify3Manager
        delete_Cloudify3Manager:
          node: CFY3Manager
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.delete
          on-success:
            - Cloudify3Manager_deleted
        Cloudify3Manager_deleted:
          node: CFY3Manager
          activity:
            set_state: deleted
          on-success:
            - Ansible4CloudifyManager_stopping
            - Compute_uninstall_1
        Cloudify3AwsConfiguration_stopping:
          node: Cloudify3AwsConfiguration
          activity:
            set_state: stopping
          on-success:
            - stop_Cloudify3AwsConfiguration
        stop_Cloudify3AwsConfiguration:
          node: Cloudify3AwsConfiguration
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - Cloudify3AwsConfiguration_stopped
        Cloudify3AwsConfiguration_stopped:
          node: Cloudify3AwsConfiguration
          activity:
            set_state: stopped
          on-success:
            - Cloudify3AwsConfiguration_deleting
        Cloudify3AwsConfiguration_deleting:
          node: Cloudify3AwsConfiguration
          activity:
            set_state: deleting
          on-success:
            - delete_Cloudify3AwsConfiguration
        delete_Cloudify3AwsConfiguration:
          node: Cloudify3AwsConfiguration
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.delete
          on-success:
            - Cloudify3AwsConfiguration_deleted
        Cloudify3AwsConfiguration_deleted:
          node: Cloudify3AwsConfiguration
          activity:
            set_state: deleted
          on-success:
            - Cloudify3Manager_stopping
        Ansible4CloudifyManager_stopping:
          node: Ansible4CloudifyManager
          activity:
            set_state: stopping
          on-success:
            - stop_Ansible4CloudifyManager
        stop_Ansible4CloudifyManager:
          node: Ansible4CloudifyManager
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - Ansible4CloudifyManager_stopped
        Ansible4CloudifyManager_stopped:
          node: Ansible4CloudifyManager
          activity:
            set_state: stopped
          on-success:
            - Ansible4CloudifyManager_deleting
        Ansible4CloudifyManager_deleting:
          node: Ansible4CloudifyManager
          activity:
            set_state: deleting
          on-success:
            - delete_Ansible4CloudifyManager
        delete_Ansible4CloudifyManager:
          node: Ansible4CloudifyManager
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.delete
          on-success:
            - Ansible4CloudifyManager_deleted
        Ansible4CloudifyManager_deleted:
          node: Ansible4CloudifyManager
          activity:
            set_state: deleted
          on-success:
            - Compute_uninstall_1
        OrchestratorConfigurator_stopping:
          node: OrchestratorConfigurator
          activity:
            set_state: stopping
          on-success:
            - stop_OrchestratorConfigurator
        stop_OrchestratorConfigurator:
          node: OrchestratorConfigurator
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - OrchestratorConfigurator_stopped
        OrchestratorConfigurator_stopped:
          node: OrchestratorConfigurator
          activity:
            set_state: stopped
          on-success:
            - Cloudify3Manager_stopping
            - Alien4Cloud_stopping
            - OrchestratorConfigurator_deleting
        OrchestratorConfigurator_deleting:
          node: OrchestratorConfigurator
          activity:
            set_state: deleting
          on-success:
            - delete_OrchestratorConfigurator
        delete_OrchestratorConfigurator:
          node: OrchestratorConfigurator
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.delete
          on-success:
            - OrchestratorConfigurator_deleted
        OrchestratorConfigurator_deleted:
          node: OrchestratorConfigurator
          activity:
            set_state: deleted
