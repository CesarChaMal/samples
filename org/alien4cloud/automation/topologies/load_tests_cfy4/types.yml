tosca_definitions_version: alien_dsl_1_4_0

metadata:
  template_name: org.alien4cloud.automation.topologies.load_tests_cfy4
  template_version: 1.4.0-SNAPSHOT
  template_author: alien4cloud

description: >
  CFY4 patched and monitored, with AWS configuration, Ansible.
  The workflow has been changed to avoid parallel operations (Ansible + Bash conflicts).


imports:
  - org.alien4cloud.monitoring.pub:1.4.0-SNAPSHOT
  - org.alien4cloud.automation.cloudify.patches.pub:1.4.0-SNAPSHOT
  - org.alien4cloud.automation.cloudify.patches.change_max_fd:1.4.0-SNAPSHOT
  - org.alien4cloud.automation.cloudify.manager.v4:1.4.0-SNAPSHOT
  - org.alien4cloud.automation.cloudify.manager.pub:1.4.0-SNAPSHOT
  - org.alien4cloud.monitoring.diamond:1.4.0-SNAPSHOT
  - tosca-normative-types:1.0.0-ALIEN14
  - org.alien4cloud.automation.cloudify.patches.amqp_client:1.4.0-SNAPSHOT
  - org.alien4cloud.automation.cloudify.patches.change_max_mgmtworker:1.4.0-SNAPSHOT
  - alien-base-types:1.4.0-SNAPSHOT
  - org.alien4cloud.lang.java.pub:1.4.0-SNAPSHOT
  - org.alien4cloud.lang.java.jmx.jolokia:1.4.0-SNAPSHOT
  - org.alien4cloud.storage.elasticsearch.pub:1.4.0-SNAPSHOT
  - org.alien4cloud.automation.cloudify.ansible:1.4.0-SNAPSHOT
  - org.alien4cloud.automation.a4c.pub:1.4.0-SNAPSHOT
  - org.alien4cloud.db.postgresql.pub:1.4.0-SNAPSHOT
  - org.alien4cloud.messaging.rabbitmq.pub:1.4.0-SNAPSHOT

topology_template:
  inputs:
    aws_region:
      type: string
      required: true
      default: "eu-west-1"
      description: "The aws region to use to start aws instances."
    aws_access_key:
      type: string
      required: true
      description: "The aws access key of the account to use to start aws instances."
    aws_secret_key:
      type: string
      required: true
      description: "The aws secret key of the account to use to start aws instances."
    aws_keypair_name:
      type: string
      required: false
      description: "Optional name of the key as known by the iaas (in case of iaas key)."
    agent_security_groups:
      type: string
      required: true
      default: "sg-cffd98b6"
      description: "Comma separated list of security groups to use for agents."
    component_version:
      type: version
      required: false
      description: "The optional software componentâ€™s version."
  input_artifacts:
    key_file:
        type: tosca.artifacts.File
  substitution_mappings:
    node_type: org.alien4cloud.automation.cloudify.manager.pub.nodes.CloudifyManagerService
    capabilities:
      cloudify_api_v3: [ CloudifyManager, cloudify_api_v3 ]
  node_templates:
    CloudifyManager:
      type: org.alien4cloud.automation.cloudify.manager.v4.nodes.CloudifyManager
      properties:
        ssh_user: "ec2-user"
        ssh_key_filename: "aws-key.pem"
        keypair_name: { get_input: aws_keypair_name }
        agents_user: ubuntu
        component_version: "4.0.1-ga"
      requirements:
        - host:
            node: CfyCompute
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
      capabilities:
        rabbitmq_management:
          properties:
            user: cloudify
            password: c10udify
            protocol: http
            port: 15672
            secure: false
            network_name: PRIVATE
            initiator: source
        postgresql:
          properties:
            user: cloudify
            password: cloudify
            protocol: tcp
            port: 5432
            secure: false
            network_name: PRIVATE
            initiator: source
        diamond_collector:
          properties:
            protocol: tcp
            secure: false
            network_name: PRIVATE
            initiator: source
        cloudify_api_v3:
          properties:
            admin_username: admin
            admin_password: admin
            protocol: https
            port: 443
            secure: false
            network_name: PRIVATE
            initiator: source
      artifacts:
        key_file:
          file: { get_input_artifact: key_file }
          type: tosca.artifacts.File
    ChangeMaxMgmtWorkerPatch:
      type: org.alien4cloud.automation.cloudify.patches.change_max_mgmtworker.nodes.ChangeMaxMgmtWorkerPatch
      properties:
        mgmt_worker_count: 100
      requirements:
        - cfy_manager:
            node: CloudifyManager
            capability: org.alien4cloud.automation.cloudify.manager.pub.capabilities.CloudifyManagerContainer
            relationship: tosca.relationships.HostedOn
    AmqpClientPatch:
      type: org.alien4cloud.automation.cloudify.patches.amqp_client.nodes.AmqpClientPatch
      requirements:
        - cfy_manager:
            node: CloudifyManager
            capability: org.alien4cloud.automation.cloudify.manager.pub.capabilities.CloudifyManagerContainer
            relationship: tosca.relationships.HostedOn
    CloudifyAwsConfiguration:
      type: org.alien4cloud.automation.cloudify.manager.v4.nodes.CloudifyAwsConfiguration
      properties:
        aws_access_key: { get_input: aws_access_key }
        aws_secret_key: { get_input: aws_secret_key }
        aws_region: { get_input: aws_region }
        agent_security_groups: { get_input: agent_security_groups }
      requirements:
        - cfy_manager:
            node: CloudifyManager
            capability: org.alien4cloud.automation.cloudify.manager.pub.capabilities.CloudifyManagerContainer
            relationship: tosca.relationships.HostedOn
    Ansible4CloudifyManager:
      type: org.alien4cloud.automation.cloudify.ansible.nodes.Ansible4CloudifyManager
      properties:
        component_version: "2.0.1.0"
      requirements:
        - host:
            node: CfyCompute
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    GraphiteService:
      type: org.alien4cloud.monitoring.pub.nodes.GraphiteService
      capabilities:
        data_endpoint:
          properties:
            protocol: tcp
            secure: false
            network_name: PRIVATE
            initiator: source
        http_endpoint:
          properties:
            protocol: tcp
            secure: false
            network_name: PRIVATE
            initiator: source
    GrafanaService:
      type: org.alien4cloud.monitoring.pub.nodes.GrafanaService
      capabilities:
        http_endpoint:
          properties:
            user: admin
            password: admin
            protocol: tcp
            secure: false
            network_name: PRIVATE
            initiator: source
    DiamondCfyCompute:
      type: org.alien4cloud.monitoring.diamond.nodes.DiamondLinuxAgent
      properties:
        datasource_name: "Graphite_DS"
        collectors_path: "/opt/ansible_diamond/env/share/diamond/collectors"
      requirements:
        - data_endpoint:
            node: GraphiteService
            capability: org.alien4cloud.monitoring.pub.capabilities.GraphiteDataEndpoint
            relationship: org.alien4cloud.monitoring.diamond.relationships.DiamondLinuxAgentConnectsToGraphite
        - grafana:
            node: GrafanaService
            capability: org.alien4cloud.monitoring.pub.capabilities.GrafanaHttpEndpoint
            relationship: org.alien4cloud.monitoring.diamond.relationships.DiamondLinuxAgentConnectsToGrafana
        - collect_cloudify:
            node: CloudifyManager
            capability: org.alien4cloud.automation.cloudify.manager.pub.capabilities.CloudifyMonitorEndpoint
            relationship: org.alien4cloud.monitoring.diamond.relationships.DiamondCloudifyCollector
        - host:
            node: CfyCompute
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    CfyCompute:
      type: tosca.nodes.Compute
      capabilities:
        host:
          properties:
            num_cpus: 4
            mem_size: "4 GIB"
        os:
          properties:
            architecture: "x86_64"
            type: linux
            distribution: centos
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1
        endpoint:
          properties:
            secure: true
            protocol: tcp
            network_name: PRIVATE
            initiator: source
    ChangeMaxFd:
      type: org.alien4cloud.automation.cloudify.patches.change_max_fd.nodes.ChangeMaxFd
      properties:
        max_file: 500000
      requirements:
        - cfy_manager:
            node: CloudifyManager
            capability: org.alien4cloud.automation.cloudify.manager.pub.capabilities.CloudifyManagerContainer
            relationship: tosca.relationships.HostedOn
  outputs:
    CloudifyManager_manager_url:
      value: { get_attribute: [ CloudifyManager, manager_url ] }
  workflows:
    install:
      steps:
        Compute_install:
          node: CfyCompute
          activity:
            delegate: install
          on-success:
            - DiamondLinuxAgent_initial
            - CloudifyManager_initial
            - Ansible4CloudifyManager_initial
        DiamondLinuxAgent_initial:
          node: DiamondCfyCompute
          activity:
            set_state: initial
          on-success:
            - DiamondLinuxAgent_creating
        DiamondLinuxAgent_creating:
          node: DiamondCfyCompute
          activity:
            set_state: creating
          on-success:
            - create_DiamondLinuxAgent
        create_DiamondLinuxAgent:
          node: DiamondCfyCompute
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.create
          on-success:
            - DiamondLinuxAgent_created
        DiamondLinuxAgent_created:
          node: DiamondCfyCompute
          activity:
            set_state: created
          on-success:
            - CloudifyManager_started
            - CloudifyManager_configuring
            - DiamondLinuxAgent_configuring
        DiamondLinuxAgent_configuring:
          node: DiamondCfyCompute
          activity:
            set_state: configuring
          on-success:
            - configure_DiamondLinuxAgent
        configure_DiamondLinuxAgent:
          node: DiamondCfyCompute
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.configure
          on-success:
            - DiamondLinuxAgent_configured
        DiamondLinuxAgent_configured:
          node: DiamondCfyCompute
          activity:
            set_state: configured
          on-success:
            - DiamondLinuxAgent_starting
        DiamondLinuxAgent_starting:
          node: DiamondCfyCompute
          activity:
            set_state: starting
          on-success:
            - start_DiamondLinuxAgent
        start_DiamondLinuxAgent:
          node: DiamondCfyCompute
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - DiamondLinuxAgent_started
        DiamondLinuxAgent_started:
          node: DiamondCfyCompute
          activity:
            set_state: started
          on-success:
            - CloudifyAwsConfiguration_initial
        CloudifyManager_initial:
          node: CloudifyManager
          activity:
            set_state: initial
          on-success:
            - CloudifyManager_creating
        CloudifyManager_creating:
          node: CloudifyManager
          activity:
            set_state: creating
          on-success:
            - create_CloudifyManager
        create_CloudifyManager:
          node: CloudifyManager
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.create
          on-success:
            - CloudifyManager_created
        CloudifyManager_created:
          node: CloudifyManager
          activity:
            set_state: created
          on-success:
            - CloudifyManager_configuring
            - DiamondLinuxAgent_initial
        CloudifyManager_configuring:
          node: CloudifyManager
          activity:
            set_state: configuring
          on-success:
            - configure_CloudifyManager
        configure_CloudifyManager:
          node: CloudifyManager
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.configure
          on-success:
            - CloudifyManager_configured
        CloudifyManager_configured:
          node: CloudifyManager
          activity:
            set_state: configured
          on-success:
            - CloudifyManager_starting
        CloudifyManager_starting:
          node: CloudifyManager
          activity:
            set_state: starting
          on-success:
            - start_CloudifyManager
        start_CloudifyManager:
          node: CloudifyManager
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - CloudifyManager_started
        CloudifyManager_started:
          node: CloudifyManager
          activity:
            set_state: started
          on-success:
            - CloudifyAwsConfiguration_initial
            - AmqpClientPatch_initial
            - ChangeMaxMgmtWorkerPatch_initial
            - Ansible4CloudifyManager_initial
            - ChangeMaxFd_initial
        CloudifyAwsConfiguration_initial:
          node: CloudifyAwsConfiguration
          activity:
            set_state: initial
          on-success:
            - CloudifyAwsConfiguration_creating
        CloudifyAwsConfiguration_creating:
          node: CloudifyAwsConfiguration
          activity:
            set_state: creating
          on-success:
            - create_CloudifyAwsConfiguration
        create_CloudifyAwsConfiguration:
          node: CloudifyAwsConfiguration
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.create
          on-success:
            - CloudifyAwsConfiguration_created
        CloudifyAwsConfiguration_created:
          node: CloudifyAwsConfiguration
          activity:
            set_state: created
          on-success:
            - CloudifyAwsConfiguration_configuring
        CloudifyAwsConfiguration_configuring:
          node: CloudifyAwsConfiguration
          activity:
            set_state: configuring
          on-success:
            - configure_CloudifyAwsConfiguration
        configure_CloudifyAwsConfiguration:
          node: CloudifyAwsConfiguration
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.configure
          on-success:
            - CloudifyAwsConfiguration_configured
        CloudifyAwsConfiguration_configured:
          node: CloudifyAwsConfiguration
          activity:
            set_state: configured
          on-success:
            - CloudifyAwsConfiguration_starting
        CloudifyAwsConfiguration_starting:
          node: CloudifyAwsConfiguration
          activity:
            set_state: starting
          on-success:
            - start_CloudifyAwsConfiguration
        start_CloudifyAwsConfiguration:
          node: CloudifyAwsConfiguration
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - CloudifyAwsConfiguration_started
        CloudifyAwsConfiguration_started:
          node: CloudifyAwsConfiguration
          activity:
            set_state: started
          on-success:
            - ChangeMaxMgmtWorkerPatch_initial
        AmqpClientPatch_initial:
          node: AmqpClientPatch
          activity:
            set_state: initial
          on-success:
            - AmqpClientPatch_creating
        AmqpClientPatch_creating:
          node: AmqpClientPatch
          activity:
            set_state: creating
          on-success:
            - create_AmqpClientPatch
        create_AmqpClientPatch:
          node: AmqpClientPatch
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.create
          on-success:
            - AmqpClientPatch_created
        AmqpClientPatch_created:
          node: AmqpClientPatch
          activity:
            set_state: created
          on-success:
            - AmqpClientPatch_configuring
        AmqpClientPatch_configuring:
          node: AmqpClientPatch
          activity:
            set_state: configuring
          on-success:
            - configure_AmqpClientPatch
        configure_AmqpClientPatch:
          node: AmqpClientPatch
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.configure
          on-success:
            - AmqpClientPatch_configured
        AmqpClientPatch_configured:
          node: AmqpClientPatch
          activity:
            set_state: configured
          on-success:
            - AmqpClientPatch_starting
        AmqpClientPatch_starting:
          node: AmqpClientPatch
          activity:
            set_state: starting
          on-success:
            - start_AmqpClientPatch
        start_AmqpClientPatch:
          node: AmqpClientPatch
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - AmqpClientPatch_started
        AmqpClientPatch_started:
          node: AmqpClientPatch
          activity:
            set_state: started
          on-success:
            - ChangeMaxFd_initial
        ChangeMaxMgmtWorkerPatch_initial:
          node: ChangeMaxMgmtWorkerPatch
          activity:
            set_state: initial
          on-success:
            - ChangeMaxMgmtWorkerPatch_creating
        ChangeMaxMgmtWorkerPatch_creating:
          node: ChangeMaxMgmtWorkerPatch
          activity:
            set_state: creating
          on-success:
            - create_ChangeMaxMgmtWorkerPatch
        create_ChangeMaxMgmtWorkerPatch:
          node: ChangeMaxMgmtWorkerPatch
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.create
          on-success:
            - ChangeMaxMgmtWorkerPatch_created
        ChangeMaxMgmtWorkerPatch_created:
          node: ChangeMaxMgmtWorkerPatch
          activity:
            set_state: created
          on-success:
            - ChangeMaxMgmtWorkerPatch_configuring
        ChangeMaxMgmtWorkerPatch_configuring:
          node: ChangeMaxMgmtWorkerPatch
          activity:
            set_state: configuring
          on-success:
            - configure_ChangeMaxMgmtWorkerPatch
        configure_ChangeMaxMgmtWorkerPatch:
          node: ChangeMaxMgmtWorkerPatch
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.configure
          on-success:
            - ChangeMaxMgmtWorkerPatch_configured
        ChangeMaxMgmtWorkerPatch_configured:
          node: ChangeMaxMgmtWorkerPatch
          activity:
            set_state: configured
          on-success:
            - ChangeMaxMgmtWorkerPatch_starting
        ChangeMaxMgmtWorkerPatch_starting:
          node: ChangeMaxMgmtWorkerPatch
          activity:
            set_state: starting
          on-success:
            - start_ChangeMaxMgmtWorkerPatch
        start_ChangeMaxMgmtWorkerPatch:
          node: ChangeMaxMgmtWorkerPatch
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - ChangeMaxMgmtWorkerPatch_started
        ChangeMaxMgmtWorkerPatch_started:
          node: ChangeMaxMgmtWorkerPatch
          activity:
            set_state: started
          on-success:
            - AmqpClientPatch_initial
        Ansible4CloudifyManager_initial:
          node: Ansible4CloudifyManager
          activity:
            set_state: initial
          on-success:
            - Ansible4CloudifyManager_creating
        Ansible4CloudifyManager_creating:
          node: Ansible4CloudifyManager
          activity:
            set_state: creating
          on-success:
            - create_Ansible4CloudifyManager
        create_Ansible4CloudifyManager:
          node: Ansible4CloudifyManager
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.create
          on-success:
            - Ansible4CloudifyManager_created
        Ansible4CloudifyManager_created:
          node: Ansible4CloudifyManager
          activity:
            set_state: created
          on-success:
            - Ansible4CloudifyManager_configuring
        Ansible4CloudifyManager_configuring:
          node: Ansible4CloudifyManager
          activity:
            set_state: configuring
          on-success:
            - configure_Ansible4CloudifyManager
        configure_Ansible4CloudifyManager:
          node: Ansible4CloudifyManager
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.configure
          on-success:
            - Ansible4CloudifyManager_configured
        Ansible4CloudifyManager_configured:
          node: Ansible4CloudifyManager
          activity:
            set_state: configured
          on-success:
            - Ansible4CloudifyManager_starting
        Ansible4CloudifyManager_starting:
          node: Ansible4CloudifyManager
          activity:
            set_state: starting
          on-success:
            - start_Ansible4CloudifyManager
        start_Ansible4CloudifyManager:
          node: Ansible4CloudifyManager
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - Ansible4CloudifyManager_started
        Ansible4CloudifyManager_started:
          node: Ansible4CloudifyManager
          activity:
            set_state: started
          on-success:
            - ChangeMaxMgmtWorkerPatch_initial
            - DiamondLinuxAgent_configuring
        GraphiteService_install:
          node: GraphiteService
          activity:
            delegate: install
          on-success:
            - DiamondLinuxAgent_initial
        GrafanaService_install:
          node: GrafanaService
          activity:
            delegate: install
          on-success:
            - DiamondLinuxAgent_initial
        ChangeMaxFd_initial:
          node: ChangeMaxFd
          activity:
            set_state: initial
          on-success:
            - ChangeMaxFd_creating
        ChangeMaxFd_creating:
          node: ChangeMaxFd
          activity:
            set_state: creating
          on-success:
            - create_ChangeMaxFd
        create_ChangeMaxFd:
          node: ChangeMaxFd
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.create
          on-success:
            - ChangeMaxFd_created
        ChangeMaxFd_created:
          node: ChangeMaxFd
          activity:
            set_state: created
          on-success:
            - ChangeMaxFd_configuring
        ChangeMaxFd_configuring:
          node: ChangeMaxFd
          activity:
            set_state: configuring
          on-success:
            - configure_ChangeMaxFd
        configure_ChangeMaxFd:
          node: ChangeMaxFd
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.configure
          on-success:
            - ChangeMaxFd_configured
        ChangeMaxFd_configured:
          node: ChangeMaxFd
          activity:
            set_state: configured
          on-success:
            - ChangeMaxFd_starting
        ChangeMaxFd_starting:
          node: ChangeMaxFd
          activity:
            set_state: starting
          on-success:
            - start_ChangeMaxFd
        start_ChangeMaxFd:
          node: ChangeMaxFd
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - ChangeMaxFd_started
        ChangeMaxFd_started:
          node: ChangeMaxFd
          activity:
            set_state: started
    uninstall:
      steps:
        Compute_uninstall:
          node: CfyCompute
          activity:
            delegate: uninstall
        DiamondLinuxAgent_stopping:
          node: DiamondCfyCompute
          activity:
            set_state: stopping
          on-success:
            - stop_DiamondLinuxAgent
        stop_DiamondLinuxAgent:
          node: DiamondCfyCompute
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - DiamondLinuxAgent_stopped
        DiamondLinuxAgent_stopped:
          node: DiamondCfyCompute
          activity:
            set_state: stopped
          on-success:
            - DiamondLinuxAgent_deleting
        DiamondLinuxAgent_deleting:
          node: DiamondCfyCompute
          activity:
            set_state: deleting
          on-success:
            - delete_DiamondLinuxAgent
        delete_DiamondLinuxAgent:
          node: DiamondCfyCompute
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.delete
          on-success:
            - DiamondLinuxAgent_deleted
        DiamondLinuxAgent_deleted:
          node: DiamondCfyCompute
          activity:
            set_state: deleted
          on-success:
            - GraphiteService_uninstall
            - Compute_uninstall
            - GrafanaService_uninstall
        CloudifyManager_stopping:
          node: CloudifyManager
          activity:
            set_state: stopping
          on-success:
            - stop_CloudifyManager
        stop_CloudifyManager:
          node: CloudifyManager
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - CloudifyManager_stopped
        CloudifyManager_stopped:
          node: CloudifyManager
          activity:
            set_state: stopped
          on-success:
            - CloudifyManager_deleting
        CloudifyManager_deleting:
          node: CloudifyManager
          activity:
            set_state: deleting
          on-success:
            - delete_CloudifyManager
        delete_CloudifyManager:
          node: CloudifyManager
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.delete
          on-success:
            - CloudifyManager_deleted
        CloudifyManager_deleted:
          node: CloudifyManager
          activity:
            set_state: deleted
          on-success:
            - Compute_uninstall
            - DiamondLinuxAgent_stopping
        CloudifyAwsConfiguration_stopping:
          node: CloudifyAwsConfiguration
          activity:
            set_state: stopping
          on-success:
            - stop_CloudifyAwsConfiguration
        stop_CloudifyAwsConfiguration:
          node: CloudifyAwsConfiguration
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - CloudifyAwsConfiguration_stopped
        CloudifyAwsConfiguration_stopped:
          node: CloudifyAwsConfiguration
          activity:
            set_state: stopped
          on-success:
            - CloudifyAwsConfiguration_deleting
        CloudifyAwsConfiguration_deleting:
          node: CloudifyAwsConfiguration
          activity:
            set_state: deleting
          on-success:
            - delete_CloudifyAwsConfiguration
        delete_CloudifyAwsConfiguration:
          node: CloudifyAwsConfiguration
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.delete
          on-success:
            - CloudifyAwsConfiguration_deleted
        CloudifyAwsConfiguration_deleted:
          node: CloudifyAwsConfiguration
          activity:
            set_state: deleted
          on-success:
            - AmqpClientPatch_stopping
            - CloudifyManager_stopping
        AmqpClientPatch_stopping:
          node: AmqpClientPatch
          activity:
            set_state: stopping
          on-success:
            - stop_AmqpClientPatch
        stop_AmqpClientPatch:
          node: AmqpClientPatch
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - AmqpClientPatch_stopped
        AmqpClientPatch_stopped:
          node: AmqpClientPatch
          activity:
            set_state: stopped
          on-success:
            - AmqpClientPatch_deleting
        AmqpClientPatch_deleting:
          node: AmqpClientPatch
          activity:
            set_state: deleting
          on-success:
            - delete_AmqpClientPatch
        delete_AmqpClientPatch:
          node: AmqpClientPatch
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.delete
          on-success:
            - AmqpClientPatch_deleted
        AmqpClientPatch_deleted:
          node: AmqpClientPatch
          activity:
            set_state: deleted
          on-success:
            - ChangeMaxMgmtWorkerPatch_stopping
            - CloudifyManager_stopping
        ChangeMaxMgmtWorkerPatch_stopping:
          node: ChangeMaxMgmtWorkerPatch
          activity:
            set_state: stopping
          on-success:
            - stop_ChangeMaxMgmtWorkerPatch
        stop_ChangeMaxMgmtWorkerPatch:
          node: ChangeMaxMgmtWorkerPatch
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - ChangeMaxMgmtWorkerPatch_stopped
        ChangeMaxMgmtWorkerPatch_stopped:
          node: ChangeMaxMgmtWorkerPatch
          activity:
            set_state: stopped
          on-success:
            - ChangeMaxMgmtWorkerPatch_deleting
        ChangeMaxMgmtWorkerPatch_deleting:
          node: ChangeMaxMgmtWorkerPatch
          activity:
            set_state: deleting
          on-success:
            - delete_ChangeMaxMgmtWorkerPatch
        delete_ChangeMaxMgmtWorkerPatch:
          node: ChangeMaxMgmtWorkerPatch
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.delete
          on-success:
            - ChangeMaxMgmtWorkerPatch_deleted
        ChangeMaxMgmtWorkerPatch_deleted:
          node: ChangeMaxMgmtWorkerPatch
          activity:
            set_state: deleted
          on-success:
            - CloudifyManager_stopping
        Ansible4CloudifyManager_stopping:
          node: Ansible4CloudifyManager
          activity:
            set_state: stopping
          on-success:
            - stop_Ansible4CloudifyManager
        stop_Ansible4CloudifyManager:
          node: Ansible4CloudifyManager
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - Ansible4CloudifyManager_stopped
        Ansible4CloudifyManager_stopped:
          node: Ansible4CloudifyManager
          activity:
            set_state: stopped
          on-success:
            - Ansible4CloudifyManager_deleting
        Ansible4CloudifyManager_deleting:
          node: Ansible4CloudifyManager
          activity:
            set_state: deleting
          on-success:
            - delete_Ansible4CloudifyManager
        delete_Ansible4CloudifyManager:
          node: Ansible4CloudifyManager
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.delete
          on-success:
            - Ansible4CloudifyManager_deleted
        Ansible4CloudifyManager_deleted:
          node: Ansible4CloudifyManager
          activity:
            set_state: deleted
          on-success:
            - Compute_uninstall
            - CloudifyAwsConfiguration_stopping
        GraphiteService_uninstall:
          node: GraphiteService
          activity:
            delegate: uninstall
        GrafanaService_uninstall:
          node: GrafanaService
          activity:
            delegate: uninstall
        ChangeMaxFd_stopping:
          node: ChangeMaxFd
          activity:
            set_state: stopping
          on-success:
            - stop_ChangeMaxFd
        stop_ChangeMaxFd:
          node: ChangeMaxFd
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - ChangeMaxFd_stopped
        ChangeMaxFd_stopped:
          node: ChangeMaxFd
          activity:
            set_state: stopped
          on-success:
            - ChangeMaxFd_deleting
        ChangeMaxFd_deleting:
          node: ChangeMaxFd
          activity:
            set_state: deleting
          on-success:
            - delete_ChangeMaxFd
        delete_ChangeMaxFd:
          node: ChangeMaxFd
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.delete
          on-success:
            - ChangeMaxFd_deleted
        ChangeMaxFd_deleted:
          node: ChangeMaxFd
          activity:
            set_state: deleted
          on-success:
            - CloudifyManager_stopping
    start:
      steps:
        Ansible4CloudifyManager_started:
          node: Ansible4CloudifyManager
          activity:
            set_state: started
        CloudifyManager_started:
          node: CloudifyManager
          activity:
            set_state: started
          on-success:
            - ChangeMaxMgmtWorkerPatch_starting
            - AmqpClientPatch_starting
            - CloudifyAwsConfiguration_starting
            - ChangeMaxFd_starting
        start_AmqpClientPatch:
          node: AmqpClientPatch
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - AmqpClientPatch_started
        CloudifyManager_starting:
          node: CloudifyManager
          activity:
            set_state: starting
          on-success:
            - start_CloudifyManager
        start_DiamondLinuxAgent:
          node: DiamondCfyCompute
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - DiamondLinuxAgent_started
        start_Ansible4CloudifyManager:
          node: Ansible4CloudifyManager
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - Ansible4CloudifyManager_started
        Ansible4CloudifyManager_starting:
          node: Ansible4CloudifyManager
          activity:
            set_state: starting
          on-success:
            - start_Ansible4CloudifyManager
        start_ChangeMaxMgmtWorkerPatch:
          node: ChangeMaxMgmtWorkerPatch
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - ChangeMaxMgmtWorkerPatch_started
        start_CloudifyAwsConfiguration:
          node: CloudifyAwsConfiguration
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - CloudifyAwsConfiguration_started
        AmqpClientPatch_starting:
          node: AmqpClientPatch
          activity:
            set_state: starting
          on-success:
            - start_AmqpClientPatch
        DiamondLinuxAgent_started:
          node: DiamondCfyCompute
          activity:
            set_state: started
        CloudifyAwsConfiguration_starting:
          node: CloudifyAwsConfiguration
          activity:
            set_state: starting
          on-success:
            - start_CloudifyAwsConfiguration
        CloudifyAwsConfiguration_started:
          node: CloudifyAwsConfiguration
          activity:
            set_state: started
        ChangeMaxMgmtWorkerPatch_starting:
          node: ChangeMaxMgmtWorkerPatch
          activity:
            set_state: starting
          on-success:
            - start_ChangeMaxMgmtWorkerPatch
        AmqpClientPatch_started:
          node: AmqpClientPatch
          activity:
            set_state: started
        start_CloudifyManager:
          node: CloudifyManager
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - CloudifyManager_started
        CFY_Compute_start:
          node: CfyCompute
          activity:
            delegate: start
          on-success:
            - CloudifyManager_starting
            - Ansible4CloudifyManager_starting
            - DiamondLinuxAgent_starting
        DiamondLinuxAgent_starting:
          node: DiamondCfyCompute
          activity:
            set_state: starting
          on-success:
            - start_DiamondLinuxAgent
        ChangeMaxMgmtWorkerPatch_started:
          node: ChangeMaxMgmtWorkerPatch
          activity:
            set_state: started
        GraphiteService_start:
          node: GraphiteService
          activity:
            delegate: start
          on-success:
            - DiamondLinuxAgent_starting
        GrafanaService_start:
          node: GrafanaService
          activity:
            delegate: start
          on-success:
            - DiamondLinuxAgent_starting
        ChangeMaxFd_starting:
          node: ChangeMaxFd
          activity:
            set_state: starting
          on-success:
            - start_ChangeMaxFd
        start_ChangeMaxFd:
          node: ChangeMaxFd
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - ChangeMaxFd_started
        ChangeMaxFd_started:
          node: ChangeMaxFd
          activity:
            set_state: started
    stop:
      steps:
        DiamondLinuxAgent_stopping:
          node: DiamondCfyCompute
          activity:
            set_state: stopping
          on-success:
            - stop_DiamondLinuxAgent
        CloudifyAwsConfiguration_stopping:
          node: CloudifyAwsConfiguration
          activity:
            set_state: stopping
          on-success:
            - stop_CloudifyAwsConfiguration
        ChangeMaxMgmtWorkerPatch_stopping:
          node: ChangeMaxMgmtWorkerPatch
          activity:
            set_state: stopping
          on-success:
            - stop_ChangeMaxMgmtWorkerPatch
        stop_CloudifyAwsConfiguration:
          node: CloudifyAwsConfiguration
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - CloudifyAwsConfiguration_stopped
        stop_Ansible4CloudifyManager:
          node: Ansible4CloudifyManager
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - Ansible4CloudifyManager_stopped
        AmqpClientPatch_stopping:
          node: AmqpClientPatch
          activity:
            set_state: stopping
          on-success:
            - stop_AmqpClientPatch
        Ansible4CloudifyManager_stopped:
          node: Ansible4CloudifyManager
          activity:
            set_state: stopped
          on-success:
            - CFY_Compute_stop
        Ansible4CloudifyManager_stopping:
          node: Ansible4CloudifyManager
          activity:
            set_state: stopping
          on-success:
            - stop_Ansible4CloudifyManager
        stop_CloudifyManager:
          node: CloudifyManager
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - CloudifyManager_stopped
        ChangeMaxMgmtWorkerPatch_stopped:
          node: ChangeMaxMgmtWorkerPatch
          activity:
            set_state: stopped
          on-success:
            - CloudifyManager_stopping
        CloudifyManager_stopping:
          node: CloudifyManager
          activity:
            set_state: stopping
          on-success:
            - stop_CloudifyManager
        AmqpClientPatch_stopped:
          node: AmqpClientPatch
          activity:
            set_state: stopped
          on-success:
            - CloudifyManager_stopping
        stop_AmqpClientPatch:
          node: AmqpClientPatch
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - AmqpClientPatch_stopped
        stop_DiamondLinuxAgent:
          node: DiamondCfyCompute
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - DiamondLinuxAgent_stopped
        CFY_Compute_stop:
          node: CfyCompute
          activity:
            delegate: stop
        CloudifyManager_stopped:
          node: CloudifyManager
          activity:
            set_state: stopped
          on-success:
            - CFY_Compute_stop
        stop_ChangeMaxMgmtWorkerPatch:
          node: ChangeMaxMgmtWorkerPatch
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - ChangeMaxMgmtWorkerPatch_stopped
        CloudifyAwsConfiguration_stopped:
          node: CloudifyAwsConfiguration
          activity:
            set_state: stopped
          on-success:
            - CloudifyManager_stopping
        DiamondLinuxAgent_stopped:
          node: DiamondCfyCompute
          activity:
            set_state: stopped
          on-success:
            - GraphiteService_stop
            - CFY_Compute_stop
            - GrafanaService_stop
        GraphiteService_stop:
          node: GraphiteService
          activity:
            delegate: stop
        GrafanaService_stop:
          node: GrafanaService
          activity:
            delegate: stop
        ChangeMaxFd_stopping:
          node: ChangeMaxFd
          activity:
            set_state: stopping
          on-success:
            - stop_ChangeMaxFd
        stop_ChangeMaxFd:
          node: ChangeMaxFd
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - ChangeMaxFd_stopped
        ChangeMaxFd_stopped:
          node: ChangeMaxFd
          activity:
            set_state: stopped
          on-success:
            - CloudifyManager_stopping
