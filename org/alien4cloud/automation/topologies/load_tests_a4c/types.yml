tosca_definitions_version: alien_dsl_1_4_0

metadata:
  template_name: org.alien4cloud.automation.topologies.load_tests_a4c
  template_version: 1.4.0-SNAPSHOT
  template_author: alien4cloud

description: >
  A4C monitored and connected to a CloudifyManagerService, ready to use for load tests.
  You'll need to provide the A4C dist package, eg. using the maven repo https://fastconnect.org/maven/content/repositories/fastconnect-snapshot  with artifact alien4cloud:alien4cloud-premium-dist:1.4.0-SNAPSHOT:dist@tar.gz
  The apache installed on HostPool_Compute is here to manager offline plugins (to avoid massive attacks on github from cfy). It also hosts a hostpool.
  The Host pool is fed with fresh EC2 instances.
  The workflow has been changed to avoid parallel operations (Ansible + Bash conflicts).
  This topology has been tested on a Centos ami-4c4b003b (t2.medium) for HostPool_Compute and Ubuntu ami-47a23a30 (t2.medium) for A4C_Compute.

imports:
  - org.alien4cloud.automation.cloudify.hostpool.service:1.4.0-SNAPSHOT
  - org.alien4cloud.automation.cloudify.hostpool.awsfeeder:1.4.0-SNAPSHOT
  - org.alien4cloud.automation.a4c.config.orch.cfy:1.4.0-SNAPSHOT
  - org.alien4cloud.storage.elasticsearch.ubuntu:1.4.0-SNAPSHOT
  - org.alien4cloud.monitoring.pub:1.4.0-SNAPSHOT
  - org.alien4cloud.automation.cloudify.manager.pub:1.4.0-SNAPSHOT
  - tosca-normative-types:1.0.0-ALIEN14
  - org.alien4cloud.monitoring.diamond:1.4.0-SNAPSHOT
  - org.alien4cloud.automation.a4c.config.csar:1.4.0-SNAPSHOT
  - alien-base-types:1.4.0-SNAPSHOT
  - org.alien4cloud.lang.java.pub:1.4.0-SNAPSHOT
  - org.alien4cloud.lang.java.jmx.jolokia:1.4.0-SNAPSHOT
  - org.alien4cloud.automation.a4c.config.orch.pub:1.4.0-SNAPSHOT
  - org.alien4cloud.automation.a4c.webapp:1.4.0-SNAPSHOT
  - org.alien4cloud.lang.java.jdk.linux:1.4.0-SNAPSHOT
  - org.alien4cloud.storage.elasticsearch.pub:1.4.0-SNAPSHOT
  - org.alien4cloud.automation.cloudify.hostpool.pub:1.4.0-SNAPSHOT
  - org.alien4cloud.automation.cloudify.config.offline_plugin:1.4.0-SNAPSHOT
  - org.alien4cloud.automation.a4c.pub:1.4.0-SNAPSHOT
  - org.alien4cloud.db.postgresql.pub:1.4.0-SNAPSHOT
  - org.alien4cloud.www.apache.linux_ans:1.4.0-SNAPSHOT
  - org.alien4cloud.www.apache.pub:1.4.0-SNAPSHOT
  - org.alien4cloud.messaging.rabbitmq.pub:1.4.0-SNAPSHOT

topology_template:
  inputs:
    aws_key_name:
      type: string
      required: true
      description: "The AWS key name"
    aws_key_content:
      type: string
      required: true
      description: "The AWS key"
    aws_region:
      type: string
      required: false
      default: "eu-west-1"
      description: "The region where to start instances"
    aws_access_key:
      type: string
      required: true
      description: "The AWS access key"
    a4c_version:
      type: version
      required: true
      description: "The version of A4C (important in create stage)."
    instance_groups:
      type: string
      required: true
      description: "Security groups the instances will be associated with"
    aws_secret_key:
      type: string
      required: true
      description: "The AWS secret key"
    instance_name:
      type: string
      required: true
      default: HostpoolInstance
      description: "The AWS instance name"
  input_artifacts:
    alien_dist:
        type: tosca.artifacts.File
  node_templates:
    OracleJDK:
      type: org.alien4cloud.lang.java.jdk.linux.nodes.OracleJDK
      properties:
        java_url: "https://edelivery.oracle.com/otn-pub/java/jdk/8u131-b11/d54c1d3a095b4ff2b6607d096fa80163/jdk-8u131-linux-x64.tar.gz"
        java_home: "/opt/java"
        component_version: "1.8.0-131-b11"
      requirements:
        - host:
            node: A4C_Compute
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    Alien4Cloud:
      type: org.alien4cloud.automation.a4c.webapp.nodes.Alien4Cloud
      properties:
        context_root: "/"
        app_args: "--spring.profiles.active=security-demo"
        component_version: { get_input: a4c_version }
        data_dir: "/opt/alien4cloud/data"
      requirements:
        - elasticsearch:
            node: ElasticSearch
            capability: org.alien4cloud.storage.elasticsearch.pub.capabilities.ElasticSearchTransportAPI
            relationship: org.alien4cloud.automation.a4c.webapp.relationships.AlienConnectToElasticSearch
        - java:
            node: OracleJDK
            capability: org.alien4cloud.lang.java.pub.capabilities.JDK
            relationship: org.alien4cloud.lang.java.pub.relationships.JavaSoftwareHostedOnJDK
      capabilities:
        rest:
          properties:
            user: admin
            password: admin
            port: 8080
            protocol: http
            secure: false
            network_name: PRIVATE
            initiator: source
        jolokia:
          properties:
            port: 8778
      artifacts:
        alien_dist:
          file: { get_input_artifact: alien_dist }
          type: tosca.artifacts.File
    OrchestratorConfigurator:
      type: org.alien4cloud.automation.a4c.config.orch.cfy.nodes.OrchestratorConfigurator
      properties:
        name: CFYOrchestrator
        pluginId: "alien-cloudify-4-orchestrator-premium"
        pluginBean: "cloudify-orchestrator"
        disableDiamondMonitorAgent: true
      requirements:
        - cfy:
            node: CloudifyManagerService
            capability: org.alien4cloud.automation.cloudify.manager.pub.capabilities.CloudifyAPIv3
            relationship: org.alien4cloud.automation.a4c.config.orch.cfy.relationships.ConnectsToCfy
        - host:
            node: Alien4Cloud
            capability: org.alien4cloud.automation.a4c.pub.capabilities.AlienConfigContainer
            relationship: org.alien4cloud.automation.a4c.pub.relationships.AlienConfiguratorHostedOnAlien
    ByonLocationConfigurator:
      type: org.alien4cloud.automation.a4c.config.orch.cfy.nodes.ByonLocationConfigurator
      properties:
        type: byon
        resourceType: "alien.cloudify.byon.nodes.LinuxCompute"
        resourceName: MyResource
        resourceArchiveName: "cloudify-byon-types"
        resourceArchiveVersion: "1.4.0"
        resourceAgentInstallMethod: none
        name: Byon
      requirements:
        - hostpool:
            node: HostPool
            capability: org.alien4cloud.automation.cloudify.hostpool.pub.capabilities.HostPoolServiceApi
            relationship: org.alien4cloud.automation.a4c.config.orch.cfy.relationships.LocationConnectsToHostpool
        - orchestrator:
            node: OrchestratorConfigurator
            capability: org.alien4cloud.automation.a4c.config.orch.pub.capabilities.OrchestratorConfigurator
            relationship: org.alien4cloud.automation.a4c.config.orch.pub.relationships.LocationHostedOnOrchestrator
    CloudifyManagerService:
      type: org.alien4cloud.automation.cloudify.manager.pub.nodes.CloudifyManagerService
      capabilities:
        cloudify_api_v3:
          properties:
            protocol: https
            port: 443
            secure: false
            network_name: PRIVATE
            initiator: source
    ElasticSearch:
      type: org.alien4cloud.storage.elasticsearch.ubuntu.nodes.ElasticSearch
      properties:
        component_version: "1.7.0"
        elasticsearch_url: "https://download.elastic.co/elasticsearch/elasticsearch/elasticsearch-1.7.0.deb"
        cluster_name: escluster
      requirements:
        - java:
            node: OracleJDK
            capability: org.alien4cloud.lang.java.pub.capabilities.JDK
            relationship: org.alien4cloud.lang.java.pub.relationships.JavaSoftwareHostedOnJDK
      capabilities:
        elasticsearch:
          properties:
            port: 9300
            protocol: tcp
            secure: false
            network_name: PRIVATE
            initiator: source
        http:
          properties:
            port: 9200
            protocol: http
            secure: false
            network_name: PRIVATE
            initiator: source
    HostPool:
      type: org.alien4cloud.automation.cloudify.hostpool.service.nodes.HostPool
      requirements:
        - host:
            node: HostPool_Compute
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
      capabilities:
        cloudify_hostpool:
          properties:
            protocol: http
            port: 8080
            secure: false
            network_name: PRIVATE
            initiator: source
    Apache:
      type: org.alien4cloud.www.apache.linux_ans.nodes.Apache
      properties:
        document_root: "/var/www/html"
      requirements:
        - host:
            node: HostPool_Compute
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
      capabilities:
        data_endpoint:
          properties:
            protocol: http
            port: 6969
            secure: false
            network_name: PRIVATE
            initiator: source
        admin_endpoint:
          properties:
            secure: true
            protocol: tcp
            network_name: PRIVATE
            initiator: source
    PluginConfigurator:
      type: org.alien4cloud.automation.cloudify.config.offline_plugin.nodes.PluginConfigurator
      properties:
        plugin_archive_url: "https://gigaspaces-repository-eu.s3.amazonaws.com/cloudify/wagons/cloudify-host-pool-plugin/1.5/cloudify_host_pool_plugin-1.5-py27-none-linux_x86_64-centos-Core.wgn"
      requirements:
        - host:
            node: Apache
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
        - alien:
            node: Alien4Cloud
            capability: org.alien4cloud.automation.a4c.pub.capabilities.A4cRestApi
            relationship: org.alien4cloud.automation.cloudify.config.offline_plugin.relationships.ConnectsToA4C
        - cfy:
            node: CloudifyManagerService
            capability: org.alien4cloud.automation.cloudify.manager.pub.capabilities.CloudifyAPIv3
            relationship: org.alien4cloud.automation.cloudify.config.offline_plugin.relationships.ConnectsToCfy
      capabilities:
        app_endpoint:
          properties:
            protocol: tcp
            secure: false
            network_name: PRIVATE
            initiator: source
    AWSHostpoolFeeder:
      type: org.alien4cloud.automation.cloudify.hostpool.awsfeeder.nodes.AWSHostpoolFeeder
      properties:
        aws_access_key: { get_input: aws_access_key }
        aws_secret_key: { get_input: aws_secret_key }
        key_name: { get_input: aws_key_name }
        key_content: { get_input: aws_key_content }
        region: "eu-west-1"
        instance_groups: { get_input: instance_groups }
        instance_username: ubuntu
        instance_type: "t2.nano"
        instance_image: "ami-47a23a30"
        instance_count: 1
        host_per_instance: 2
        instance_name: { get_input: instance_name }
        instance_os: linux
      requirements:
        - hostpool:
            node: HostPool
            capability: org.alien4cloud.automation.cloudify.hostpool.pub.capabilities.HostPoolServiceApi
            relationship: org.alien4cloud.automation.cloudify.hostpool.awsfeeder.relationships.HostpoolFeederConnectToHostpool
        - host:
            node: HostPool_Compute
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    AddExtendedTypes:
      type: org.alien4cloud.automation.a4c.config.csar.nodes.AddCsarFromGit
      properties:
        repositoryUrl: "https://github.com/alien4cloud/alien4cloud-extended-types"
        branchId: master
      requirements:
        - host:
            node: Alien4Cloud
            capability: org.alien4cloud.automation.a4c.pub.capabilities.AlienConfigContainer
            relationship: org.alien4cloud.automation.a4c.pub.relationships.AlienConfiguratorHostedOnAlien
    AddMockTypes:
      type: org.alien4cloud.automation.a4c.config.csar.nodes.AddCsarFromGit
      properties:
        repositoryUrl: "https://github.com/alien4cloud/samples"
        branchId: master
        subPath: "org/alien4cloud/mock"
      requirements:
        - dependency:
            node: AddExtendedTypes
            capability: tosca.capabilities.Node
            relationship: tosca.relationships.DependsOn
        - host:
            node: Alien4Cloud
            capability: org.alien4cloud.automation.a4c.pub.capabilities.AlienConfigContainer
            relationship: org.alien4cloud.automation.a4c.pub.relationships.AlienConfiguratorHostedOnAlien
    GraphiteService:
      type: org.alien4cloud.monitoring.pub.nodes.GraphiteService
      capabilities:
        data_endpoint:
          properties:
            protocol: tcp
            secure: false
            network_name: PRIVATE
            initiator: source
        http_endpoint:
          properties:
            protocol: tcp
            secure: false
            network_name: PRIVATE
            initiator: source
    GrafanaService:
      type: org.alien4cloud.monitoring.pub.nodes.GrafanaService
      capabilities:
        http_endpoint:
          properties:
            user: admin
            password: admin
            protocol: tcp
            secure: false
            network_name: PRIVATE
            initiator: source
    HostPool_Compute:
      type: tosca.nodes.Compute
      capabilities:
        os:
          properties:
            architecture: "x86_64"
            type: linux
            distribution: centos
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1
        endpoint:
          properties:
            secure: true
            protocol: tcp
            network_name: PRIVATE
            initiator: source
    A4C_Compute:
      type: tosca.nodes.Compute
      capabilities:
        os:
          properties:
            architecture: "x86_64"
            type: linux
            distribution: ubuntu
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1
        endpoint:
          properties:
            secure: true
            protocol: tcp
            network_name: PRIVATE
            initiator: source
    A4C_Compute_Agent:
      type: org.alien4cloud.monitoring.diamond.nodes.DiamondLinuxAgent
      properties:
        datasource_name: "Graphite_DS"
        collectors_path: "/opt/ansible_diamond/env/share/diamond/collectors"
      requirements:
        - collec_jolokia:
            node: Alien4Cloud
            capability: org.alien4cloud.automation.a4c.pub.capabilities.JolokiaA4CEndpoint
            relationship: org.alien4cloud.monitoring.diamond.relationships.DiamondA4CCollector
        - collec_elasticsearch:
            node: ElasticSearch
            capability: org.alien4cloud.storage.elasticsearch.pub.capabilities.ElasticSearchRestAPI
            relationship: org.alien4cloud.monitoring.diamond.relationships.DiamondCollectElasticSearch
        - data_endpoint:
            node: GraphiteService
            capability: org.alien4cloud.monitoring.pub.capabilities.GraphiteDataEndpoint
            relationship: org.alien4cloud.monitoring.diamond.relationships.DiamondLinuxAgentConnectsToGraphite
        - grafana:
            node: GrafanaService
            capability: org.alien4cloud.monitoring.pub.capabilities.GrafanaHttpEndpoint
            relationship: org.alien4cloud.monitoring.diamond.relationships.DiamondLinuxAgentConnectsToGrafana
        - host:
            node: A4C_Compute
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    Hostpool_Compute_agent:
      type: org.alien4cloud.monitoring.diamond.nodes.DiamondLinuxAgent
      properties:
        datasource_name: "Graphite_DS"
        collectors_path: "/opt/ansible_diamond/env/share/diamond/collectors"
      requirements:
        - host:
            node: HostPool_Compute
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
        - data_endpoint:
            node: GraphiteService
            capability: org.alien4cloud.monitoring.pub.capabilities.GraphiteDataEndpoint
            relationship: org.alien4cloud.monitoring.diamond.relationships.DiamondLinuxAgentConnectsToGraphite
        - grafana:
            node: GrafanaService
            capability: org.alien4cloud.monitoring.pub.capabilities.GrafanaHttpEndpoint
            relationship: org.alien4cloud.monitoring.diamond.relationships.DiamondLinuxAgentConnectsToGrafana
  outputs:
    Alien4Cloud_alien_url:
      value: { get_attribute: [ Alien4Cloud, alien_url ] }
  workflows:
    install:
      steps:
        Compute_install:
          node: A4C_Compute
          activity:
            delegate: install
          on-success:
            - DiamondLinuxAgent_initial
            - OracleJDK_initial
        OracleJDK_initial:
          node: OracleJDK
          activity:
            set_state: initial
          on-success:
            - OracleJDK_creating
        OracleJDK_creating:
          node: OracleJDK
          activity:
            set_state: creating
          on-success:
            - create_OracleJDK
        create_OracleJDK:
          node: OracleJDK
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.create
          on-success:
            - OracleJDK_created
        OracleJDK_created:
          node: OracleJDK
          activity:
            set_state: created
          on-success:
            - OracleJDK_configuring
        OracleJDK_configuring:
          node: OracleJDK
          activity:
            set_state: configuring
          on-success:
            - configure_OracleJDK
        configure_OracleJDK:
          node: OracleJDK
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.configure
          on-success:
            - OracleJDK_configured
        OracleJDK_configured:
          node: OracleJDK
          activity:
            set_state: configured
          on-success:
            - OracleJDK_starting
        OracleJDK_starting:
          node: OracleJDK
          activity:
            set_state: starting
          on-success:
            - start_OracleJDK
        start_OracleJDK:
          node: OracleJDK
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - OracleJDK_started
        OracleJDK_started:
          node: OracleJDK
          activity:
            set_state: started
          on-success:
            - ElasticSearch_initial
            - Alien4Cloud_2_initial
        Alien4Cloud_2_initial:
          node: Alien4Cloud
          activity:
            set_state: initial
          on-success:
            - Alien4Cloud_2_creating
        Alien4Cloud_2_creating:
          node: Alien4Cloud
          activity:
            set_state: creating
          on-success:
            - create_Alien4Cloud_2
        create_Alien4Cloud_2:
          node: Alien4Cloud
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.create
          on-success:
            - Alien4Cloud_2_created
        Alien4Cloud_2_created:
          node: Alien4Cloud
          activity:
            set_state: created
          on-success:
            - Alien4Cloud_2_configuring
            - ElasticSearch_configuring
        Alien4Cloud_2_configuring:
          node: Alien4Cloud
          activity:
            set_state: configuring
          on-success:
            - configure_Alien4Cloud_2
        configure_Alien4Cloud_2:
          node: Alien4Cloud
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.configure
          on-success:
            - Alien4Cloud_2_configured
        Alien4Cloud_2_configured:
          node: Alien4Cloud
          activity:
            set_state: configured
          on-success:
            - Alien4Cloud_2_starting
        Alien4Cloud_2_starting:
          node: Alien4Cloud
          activity:
            set_state: starting
          on-success:
            - start_Alien4Cloud_2
        start_Alien4Cloud_2:
          node: Alien4Cloud
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - Alien4Cloud_2_started
        Alien4Cloud_2_started:
          node: Alien4Cloud
          activity:
            set_state: started
          on-success:
            - AddCsarFromGit_initial_1
            - OrchestratorConfigurator_initial
            - PluginConfigurator_configuring
            - DiamondLinuxAgent_configuring
            - AddCsarFromGit_initial
        OrchestratorConfigurator_initial:
          node: OrchestratorConfigurator
          activity:
            set_state: initial
          on-success:
            - OrchestratorConfigurator_creating
        OrchestratorConfigurator_creating:
          node: OrchestratorConfigurator
          activity:
            set_state: creating
          on-success:
            - OrchestratorConfigurator_created
        OrchestratorConfigurator_created:
          node: OrchestratorConfigurator
          activity:
            set_state: created
          on-success:
            - OrchestratorConfigurator_configuring
        OrchestratorConfigurator_configuring:
          node: OrchestratorConfigurator
          activity:
            set_state: configuring
          on-success:
            - configure_OrchestratorConfigurator
        configure_OrchestratorConfigurator:
          node: OrchestratorConfigurator
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.configure
          on-success:
            - OrchestratorConfigurator_configured
        OrchestratorConfigurator_configured:
          node: OrchestratorConfigurator
          activity:
            set_state: configured
          on-success:
            - OrchestratorConfigurator_starting
        OrchestratorConfigurator_starting:
          node: OrchestratorConfigurator
          activity:
            set_state: starting
          on-success:
            - start_OrchestratorConfigurator
        start_OrchestratorConfigurator:
          node: OrchestratorConfigurator
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - OrchestratorConfigurator_started
        OrchestratorConfigurator_started:
          node: OrchestratorConfigurator
          activity:
            set_state: started
          on-success:
            - ByonLocationConfigurator_initial
        ByonLocationConfigurator_initial:
          node: ByonLocationConfigurator
          activity:
            set_state: initial
          on-success:
            - ByonLocationConfigurator_creating
        ByonLocationConfigurator_creating:
          node: ByonLocationConfigurator
          activity:
            set_state: creating
          on-success:
            - create_ByonLocationConfigurator
        create_ByonLocationConfigurator:
          node: ByonLocationConfigurator
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.create
          on-success:
            - ByonLocationConfigurator_created
        ByonLocationConfigurator_created:
          node: ByonLocationConfigurator
          activity:
            set_state: created
          on-success:
            - HostPool_configuring
            - ByonLocationConfigurator_configuring
            - DiamondLinuxAgent_configuring
        ByonLocationConfigurator_configuring:
          node: ByonLocationConfigurator
          activity:
            set_state: configuring
          on-success:
            - configure_ByonLocationConfigurator
        configure_ByonLocationConfigurator:
          node: ByonLocationConfigurator
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.configure
          on-success:
            - ByonLocationConfigurator_configured
        ByonLocationConfigurator_configured:
          node: ByonLocationConfigurator
          activity:
            set_state: configured
          on-success:
            - ByonLocationConfigurator_starting
        ByonLocationConfigurator_starting:
          node: ByonLocationConfigurator
          activity:
            set_state: starting
          on-success:
            - start_ByonLocationConfigurator
        start_ByonLocationConfigurator:
          node: ByonLocationConfigurator
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - ByonLocationConfigurator_started
        ByonLocationConfigurator_started:
          node: ByonLocationConfigurator
          activity:
            set_state: started
          on-success:
            - AddCsarFromGit_initial_1
            - AddCsarFromGit_initial
        CloudifyManagerService_install:
          node: CloudifyManagerService
          activity:
            delegate: install
          on-success:
            - OrchestratorConfigurator_initial
            - PluginConfigurator_initial
        DiamondLinuxAgent_initial:
          node: A4C_Compute_Agent
          activity:
            set_state: initial
          on-success:
            - DiamondLinuxAgent_creating
        DiamondLinuxAgent_creating:
          node: A4C_Compute_Agent
          activity:
            set_state: creating
          on-success:
            - create_DiamondLinuxAgent
        create_DiamondLinuxAgent:
          node: A4C_Compute_Agent
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.create
          on-success:
            - DiamondLinuxAgent_created
        DiamondLinuxAgent_created:
          node: A4C_Compute_Agent
          activity:
            set_state: created
          on-success:
            - Alien4Cloud_2_configuring
            - ElasticSearch_configuring
            - OracleJDK_initial
            - DiamondLinuxAgent_configuring
        DiamondLinuxAgent_configuring:
          node: A4C_Compute_Agent
          activity:
            set_state: configuring
          on-success:
            - configure_DiamondLinuxAgent
        configure_DiamondLinuxAgent:
          node: A4C_Compute_Agent
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.configure
          on-success:
            - DiamondLinuxAgent_configured
        DiamondLinuxAgent_configured:
          node: A4C_Compute_Agent
          activity:
            set_state: configured
          on-success:
            - DiamondLinuxAgent_starting
        DiamondLinuxAgent_starting:
          node: A4C_Compute_Agent
          activity:
            set_state: starting
          on-success:
            - start_DiamondLinuxAgent
        start_DiamondLinuxAgent:
          node: A4C_Compute_Agent
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - DiamondLinuxAgent_started
        DiamondLinuxAgent_started:
          node: A4C_Compute_Agent
          activity:
            set_state: started
          on-success:
            - ByonLocationConfigurator_configuring
        ElasticSearch_initial:
          node: ElasticSearch
          activity:
            set_state: initial
          on-success:
            - ElasticSearch_creating
        ElasticSearch_creating:
          node: ElasticSearch
          activity:
            set_state: creating
          on-success:
            - create_ElasticSearch
        create_ElasticSearch:
          node: ElasticSearch
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.create
          on-success:
            - ElasticSearch_created
        ElasticSearch_created:
          node: ElasticSearch
          activity:
            set_state: created
          on-success:
            - ElasticSearch_configuring
            - Alien4Cloud_2_initial
        ElasticSearch_configuring:
          node: ElasticSearch
          activity:
            set_state: configuring
          on-success:
            - configure_ElasticSearch
        configure_ElasticSearch:
          node: ElasticSearch
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.configure
          on-success:
            - ElasticSearch_configured
        ElasticSearch_configured:
          node: ElasticSearch
          activity:
            set_state: configured
          on-success:
            - ElasticSearch_starting
        ElasticSearch_starting:
          node: ElasticSearch
          activity:
            set_state: starting
          on-success:
            - start_ElasticSearch
        start_ElasticSearch:
          node: ElasticSearch
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - ElasticSearch_started
        ElasticSearch_started:
          node: ElasticSearch
          activity:
            set_state: started
          on-success:
            - Alien4Cloud_2_configuring
            - DiamondLinuxAgent_configuring
        Compute_install_1:
          node: HostPool_Compute
          activity:
            delegate: install
          on-success:
            - HostPool_initial
            - AWSHostpoolFeeder_initial
            - Apache_initial
            - DiamondLinuxAgent_2_initial
        HostPool_initial:
          node: HostPool
          activity:
            set_state: initial
          on-success:
            - HostPool_creating
        HostPool_creating:
          node: HostPool
          activity:
            set_state: creating
          on-success:
            - create_HostPool
        create_HostPool:
          node: HostPool
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.create
          on-success:
            - HostPool_created
        HostPool_created:
          node: HostPool
          activity:
            set_state: created
          on-success:
            - HostPool_configuring
        HostPool_configuring:
          node: HostPool
          activity:
            set_state: configuring
          on-success:
            - configure_HostPool
        configure_HostPool:
          node: HostPool
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.configure
          on-success:
            - HostPool_configured
        HostPool_configured:
          node: HostPool
          activity:
            set_state: configured
          on-success:
            - HostPool_starting
        HostPool_starting:
          node: HostPool
          activity:
            set_state: starting
          on-success:
            - start_HostPool
        start_HostPool:
          node: HostPool
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - HostPool_started
        HostPool_started:
          node: HostPool
          activity:
            set_state: started
          on-success:
            - AWSHostpoolFeeder_configuring
            - PluginConfigurator_configuring
            - ByonLocationConfigurator_configuring
        Apache_initial:
          node: Apache
          activity:
            set_state: initial
          on-success:
            - Apache_creating
        Apache_creating:
          node: Apache
          activity:
            set_state: creating
          on-success:
            - create_Apache
        create_Apache:
          node: Apache
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.create
          on-success:
            - Apache_created
        Apache_created:
          node: Apache
          activity:
            set_state: created
          on-success:
            - Apache_configuring
        Apache_configuring:
          node: Apache
          activity:
            set_state: configuring
          on-success:
            - configure_Apache
        configure_Apache:
          node: Apache
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.configure
          on-success:
            - Apache_configured
        Apache_configured:
          node: Apache
          activity:
            set_state: configured
          on-success:
            - Apache_starting
        Apache_starting:
          node: Apache
          activity:
            set_state: starting
          on-success:
            - start_Apache
        start_Apache:
          node: Apache
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - Apache_started
        Apache_started:
          node: Apache
          activity:
            set_state: started
          on-success:
            - PluginConfigurator_initial
        PluginConfigurator_initial:
          node: PluginConfigurator
          activity:
            set_state: initial
          on-success:
            - PluginConfigurator_creating
        PluginConfigurator_creating:
          node: PluginConfigurator
          activity:
            set_state: creating
          on-success:
            - create_PluginConfigurator
        create_PluginConfigurator:
          node: PluginConfigurator
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.create
          on-success:
            - PluginConfigurator_created
        PluginConfigurator_created:
          node: PluginConfigurator
          activity:
            set_state: created
          on-success:
            - Alien4Cloud_2_configuring
            - AWSHostpoolFeeder_initial
            - PluginConfigurator_configuring
        PluginConfigurator_configuring:
          node: PluginConfigurator
          activity:
            set_state: configuring
          on-success:
            - configure_PluginConfigurator
        configure_PluginConfigurator:
          node: PluginConfigurator
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.configure
          on-success:
            - PluginConfigurator_configured
        PluginConfigurator_configured:
          node: PluginConfigurator
          activity:
            set_state: configured
          on-success:
            - PluginConfigurator_starting
        PluginConfigurator_starting:
          node: PluginConfigurator
          activity:
            set_state: starting
          on-success:
            - start_PluginConfigurator
        start_PluginConfigurator:
          node: PluginConfigurator
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - PluginConfigurator_started
        PluginConfigurator_started:
          node: PluginConfigurator
          activity:
            set_state: started
        AWSHostpoolFeeder_initial:
          node: AWSHostpoolFeeder
          activity:
            set_state: initial
          on-success:
            - AWSHostpoolFeeder_creating
        AWSHostpoolFeeder_creating:
          node: AWSHostpoolFeeder
          activity:
            set_state: creating
          on-success:
            - AWSHostpoolFeeder_created
        AWSHostpoolFeeder_created:
          node: AWSHostpoolFeeder
          activity:
            set_state: created
          on-success:
            - HostPool_configuring
            - HostPool_initial
            - AWSHostpoolFeeder_configuring
        AWSHostpoolFeeder_configuring:
          node: AWSHostpoolFeeder
          activity:
            set_state: configuring
          on-success:
            - configure_AWSHostpoolFeeder
        configure_AWSHostpoolFeeder:
          node: AWSHostpoolFeeder
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.configure
          on-success:
            - AWSHostpoolFeeder_configured
        AWSHostpoolFeeder_configured:
          node: AWSHostpoolFeeder
          activity:
            set_state: configured
          on-success:
            - AWSHostpoolFeeder_starting
        AWSHostpoolFeeder_starting:
          node: AWSHostpoolFeeder
          activity:
            set_state: starting
          on-success:
            - start_AWSHostpoolFeeder
        start_AWSHostpoolFeeder:
          node: AWSHostpoolFeeder
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - AWSHostpoolFeeder_started
        AWSHostpoolFeeder_started:
          node: AWSHostpoolFeeder
          activity:
            set_state: started
          on-success:
            - PluginConfigurator_configuring
        AddCsarFromGit_initial:
          node: AddExtendedTypes
          activity:
            set_state: initial
          on-success:
            - AddCsarFromGit_creating
        AddCsarFromGit_creating:
          node: AddExtendedTypes
          activity:
            set_state: creating
          on-success:
            - AddCsarFromGit_created
        AddCsarFromGit_created:
          node: AddExtendedTypes
          activity:
            set_state: created
          on-success:
            - AddCsarFromGit_configuring
        AddCsarFromGit_configuring:
          node: AddExtendedTypes
          activity:
            set_state: configuring
          on-success:
            - configure_AddCsarFromGit
        configure_AddCsarFromGit:
          node: AddExtendedTypes
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.configure
          on-success:
            - AddCsarFromGit_configured
        AddCsarFromGit_configured:
          node: AddExtendedTypes
          activity:
            set_state: configured
          on-success:
            - AddCsarFromGit_starting
        AddCsarFromGit_starting:
          node: AddExtendedTypes
          activity:
            set_state: starting
          on-success:
            - start_AddCsarFromGit
        start_AddCsarFromGit:
          node: AddExtendedTypes
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - AddCsarFromGit_started
        AddCsarFromGit_started:
          node: AddExtendedTypes
          activity:
            set_state: started
          on-success:
            - AddCsarFromGit_configuring_1
        AddCsarFromGit_initial_1:
          node: AddMockTypes
          activity:
            set_state: initial
          on-success:
            - AddCsarFromGit_creating_1
        AddCsarFromGit_creating_1:
          node: AddMockTypes
          activity:
            set_state: creating
          on-success:
            - AddCsarFromGit_created_1
        AddCsarFromGit_created_1:
          node: AddMockTypes
          activity:
            set_state: created
          on-success:
            - AddCsarFromGit_configuring
            - AddCsarFromGit_configuring_1
            - AddCsarFromGit_initial
        AddCsarFromGit_configuring_1:
          node: AddMockTypes
          activity:
            set_state: configuring
          on-success:
            - configure_AddCsarFromGit_1
        configure_AddCsarFromGit_1:
          node: AddMockTypes
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.configure
          on-success:
            - AddCsarFromGit_configured_1
        AddCsarFromGit_configured_1:
          node: AddMockTypes
          activity:
            set_state: configured
          on-success:
            - AddCsarFromGit_starting_1
        AddCsarFromGit_starting_1:
          node: AddMockTypes
          activity:
            set_state: starting
          on-success:
            - start_AddCsarFromGit_1
        start_AddCsarFromGit_1:
          node: AddMockTypes
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - AddCsarFromGit_started_1
        AddCsarFromGit_started_1:
          node: AddMockTypes
          activity:
            set_state: started
        GraphiteService_install:
          node: GraphiteService
          activity:
            delegate: install
          on-success:
            - DiamondLinuxAgent_initial
            - DiamondLinuxAgent_2_initial
        GrafanaService_install:
          node: GrafanaService
          activity:
            delegate: install
          on-success:
            - DiamondLinuxAgent_initial
            - DiamondLinuxAgent_2_initial
        DiamondLinuxAgent_2_initial:
          node: Hostpool_Compute_agent
          activity:
            set_state: initial
          on-success:
            - DiamondLinuxAgent_2_creating
        DiamondLinuxAgent_2_creating:
          node: Hostpool_Compute_agent
          activity:
            set_state: creating
          on-success:
            - create_DiamondLinuxAgent_2
        create_DiamondLinuxAgent_2:
          node: Hostpool_Compute_agent
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.create
          on-success:
            - DiamondLinuxAgent_2_created
        DiamondLinuxAgent_2_created:
          node: Hostpool_Compute_agent
          activity:
            set_state: created
          on-success:
            - DiamondLinuxAgent_2_configuring
        DiamondLinuxAgent_2_configuring:
          node: Hostpool_Compute_agent
          activity:
            set_state: configuring
          on-success:
            - configure_DiamondLinuxAgent_2
        configure_DiamondLinuxAgent_2:
          node: Hostpool_Compute_agent
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.configure
          on-success:
            - DiamondLinuxAgent_2_configured
        DiamondLinuxAgent_2_configured:
          node: Hostpool_Compute_agent
          activity:
            set_state: configured
          on-success:
            - DiamondLinuxAgent_2_starting
        DiamondLinuxAgent_2_starting:
          node: Hostpool_Compute_agent
          activity:
            set_state: starting
          on-success:
            - start_DiamondLinuxAgent_2
        start_DiamondLinuxAgent_2:
          node: Hostpool_Compute_agent
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - DiamondLinuxAgent_2_started
        DiamondLinuxAgent_2_started:
          node: Hostpool_Compute_agent
          activity:
            set_state: started
          on-success:
            - Apache_initial
    uninstall:
      steps:
        Compute_uninstall:
          node: A4C_Compute
          activity:
            delegate: uninstall
        OracleJDK_stopping:
          node: OracleJDK
          activity:
            set_state: stopping
          on-success:
            - stop_OracleJDK
        stop_OracleJDK:
          node: OracleJDK
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - OracleJDK_stopped
        OracleJDK_stopped:
          node: OracleJDK
          activity:
            set_state: stopped
          on-success:
            - OracleJDK_deleting
        OracleJDK_deleting:
          node: OracleJDK
          activity:
            set_state: deleting
          on-success:
            - delete_OracleJDK
        delete_OracleJDK:
          node: OracleJDK
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.delete
          on-success:
            - OracleJDK_deleted
        OracleJDK_deleted:
          node: OracleJDK
          activity:
            set_state: deleted
          on-success:
            - Compute_uninstall
        Alien4Cloud_2_stopping:
          node: Alien4Cloud
          activity:
            set_state: stopping
          on-success:
            - stop_Alien4Cloud_2
        stop_Alien4Cloud_2:
          node: Alien4Cloud
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - Alien4Cloud_2_stopped
        Alien4Cloud_2_stopped:
          node: Alien4Cloud
          activity:
            set_state: stopped
          on-success:
            - Alien4Cloud_2_deleting
            - ElasticSearch_stopping
        Alien4Cloud_2_deleting:
          node: Alien4Cloud
          activity:
            set_state: deleting
          on-success:
            - delete_Alien4Cloud_2
        delete_Alien4Cloud_2:
          node: Alien4Cloud
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.delete
          on-success:
            - Alien4Cloud_2_deleted
        Alien4Cloud_2_deleted:
          node: Alien4Cloud
          activity:
            set_state: deleted
          on-success:
            - OracleJDK_stopping
        OrchestratorConfigurator_stopping:
          node: OrchestratorConfigurator
          activity:
            set_state: stopping
          on-success:
            - stop_OrchestratorConfigurator
        stop_OrchestratorConfigurator:
          node: OrchestratorConfigurator
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - OrchestratorConfigurator_stopped
        OrchestratorConfigurator_stopped:
          node: OrchestratorConfigurator
          activity:
            set_state: stopped
          on-success:
            - OrchestratorConfigurator_deleting
        OrchestratorConfigurator_deleting:
          node: OrchestratorConfigurator
          activity:
            set_state: deleting
          on-success:
            - delete_OrchestratorConfigurator
        delete_OrchestratorConfigurator:
          node: OrchestratorConfigurator
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.delete
          on-success:
            - OrchestratorConfigurator_deleted
        OrchestratorConfigurator_deleted:
          node: OrchestratorConfigurator
          activity:
            set_state: deleted
          on-success:
            - CloudifyManagerService_uninstall
            - Alien4Cloud_2_stopping
        ByonLocationConfigurator_stopping:
          node: ByonLocationConfigurator
          activity:
            set_state: stopping
          on-success:
            - stop_ByonLocationConfigurator
        stop_ByonLocationConfigurator:
          node: ByonLocationConfigurator
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - ByonLocationConfigurator_stopped
        ByonLocationConfigurator_stopped:
          node: ByonLocationConfigurator
          activity:
            set_state: stopped
          on-success:
            - HostPool_stopping
            - ByonLocationConfigurator_deleting
        ByonLocationConfigurator_deleting:
          node: ByonLocationConfigurator
          activity:
            set_state: deleting
          on-success:
            - delete_ByonLocationConfigurator
        delete_ByonLocationConfigurator:
          node: ByonLocationConfigurator
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.delete
          on-success:
            - ByonLocationConfigurator_deleted
        ByonLocationConfigurator_deleted:
          node: ByonLocationConfigurator
          activity:
            set_state: deleted
          on-success:
            - OrchestratorConfigurator_stopping
        CloudifyManagerService_uninstall:
          node: CloudifyManagerService
          activity:
            delegate: uninstall
        DiamondLinuxAgent_stopping:
          node: A4C_Compute_Agent
          activity:
            set_state: stopping
          on-success:
            - stop_DiamondLinuxAgent
        stop_DiamondLinuxAgent:
          node: A4C_Compute_Agent
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - DiamondLinuxAgent_stopped
        DiamondLinuxAgent_stopped:
          node: A4C_Compute_Agent
          activity:
            set_state: stopped
          on-success:
            - DiamondLinuxAgent_deleting
            - ElasticSearch_stopping
            - Alien4Cloud_2_stopping
        DiamondLinuxAgent_deleting:
          node: A4C_Compute_Agent
          activity:
            set_state: deleting
          on-success:
            - delete_DiamondLinuxAgent
        delete_DiamondLinuxAgent:
          node: A4C_Compute_Agent
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.delete
          on-success:
            - DiamondLinuxAgent_deleted
        DiamondLinuxAgent_deleted:
          node: A4C_Compute_Agent
          activity:
            set_state: deleted
          on-success:
            - GraphiteService_uninstall
            - Compute_uninstall
            - GrafanaService_uninstall
        ElasticSearch_stopping:
          node: ElasticSearch
          activity:
            set_state: stopping
          on-success:
            - stop_ElasticSearch
        stop_ElasticSearch:
          node: ElasticSearch
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - ElasticSearch_stopped
        ElasticSearch_stopped:
          node: ElasticSearch
          activity:
            set_state: stopped
          on-success:
            - ElasticSearch_deleting
        ElasticSearch_deleting:
          node: ElasticSearch
          activity:
            set_state: deleting
          on-success:
            - delete_ElasticSearch
        delete_ElasticSearch:
          node: ElasticSearch
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.delete
          on-success:
            - ElasticSearch_deleted
        ElasticSearch_deleted:
          node: ElasticSearch
          activity:
            set_state: deleted
          on-success:
            - OracleJDK_stopping
        Compute_uninstall_1:
          node: HostPool_Compute
          activity:
            delegate: uninstall
        HostPool_stopping:
          node: HostPool
          activity:
            set_state: stopping
          on-success:
            - stop_HostPool
        stop_HostPool:
          node: HostPool
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - HostPool_stopped
        HostPool_stopped:
          node: HostPool
          activity:
            set_state: stopped
          on-success:
            - HostPool_deleting
        HostPool_deleting:
          node: HostPool
          activity:
            set_state: deleting
          on-success:
            - delete_HostPool
        delete_HostPool:
          node: HostPool
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.delete
          on-success:
            - HostPool_deleted
        HostPool_deleted:
          node: HostPool
          activity:
            set_state: deleted
          on-success:
            - Compute_uninstall_1
        Apache_stopping:
          node: Apache
          activity:
            set_state: stopping
          on-success:
            - stop_Apache
        stop_Apache:
          node: Apache
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - Apache_stopped
        Apache_stopped:
          node: Apache
          activity:
            set_state: stopped
          on-success:
            - Apache_deleting
        Apache_deleting:
          node: Apache
          activity:
            set_state: deleting
          on-success:
            - delete_Apache
        delete_Apache:
          node: Apache
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.delete
          on-success:
            - Apache_deleted
        Apache_deleted:
          node: Apache
          activity:
            set_state: deleted
          on-success:
            - Compute_uninstall_1
        PluginConfigurator_stopping:
          node: PluginConfigurator
          activity:
            set_state: stopping
          on-success:
            - stop_PluginConfigurator
        stop_PluginConfigurator:
          node: PluginConfigurator
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - PluginConfigurator_stopped
        PluginConfigurator_stopped:
          node: PluginConfigurator
          activity:
            set_state: stopped
          on-success:
            - PluginConfigurator_deleting
            - Alien4Cloud_2_stopping
        PluginConfigurator_deleting:
          node: PluginConfigurator
          activity:
            set_state: deleting
          on-success:
            - delete_PluginConfigurator
        delete_PluginConfigurator:
          node: PluginConfigurator
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.delete
          on-success:
            - PluginConfigurator_deleted
        PluginConfigurator_deleted:
          node: PluginConfigurator
          activity:
            set_state: deleted
          on-success:
            - CloudifyManagerService_uninstall
            - Apache_stopping
        AWSHostpoolFeeder_stopping:
          node: AWSHostpoolFeeder
          activity:
            set_state: stopping
          on-success:
            - stop_AWSHostpoolFeeder
        stop_AWSHostpoolFeeder:
          node: AWSHostpoolFeeder
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - AWSHostpoolFeeder_stopped
        AWSHostpoolFeeder_stopped:
          node: AWSHostpoolFeeder
          activity:
            set_state: stopped
          on-success:
            - HostPool_stopping
            - AWSHostpoolFeeder_deleting
        AWSHostpoolFeeder_deleting:
          node: AWSHostpoolFeeder
          activity:
            set_state: deleting
          on-success:
            - delete_AWSHostpoolFeeder
        delete_AWSHostpoolFeeder:
          node: AWSHostpoolFeeder
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.delete
          on-success:
            - AWSHostpoolFeeder_deleted
        AWSHostpoolFeeder_deleted:
          node: AWSHostpoolFeeder
          activity:
            set_state: deleted
          on-success:
            - Compute_uninstall_1
        AddCsarFromGit_stopping:
          node: AddExtendedTypes
          activity:
            set_state: stopping
          on-success:
            - stop_AddCsarFromGit
        stop_AddCsarFromGit:
          node: AddExtendedTypes
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - AddCsarFromGit_stopped
        AddCsarFromGit_stopped:
          node: AddExtendedTypes
          activity:
            set_state: stopped
          on-success:
            - AddCsarFromGit_deleting
        AddCsarFromGit_deleting:
          node: AddExtendedTypes
          activity:
            set_state: deleting
          on-success:
            - delete_AddCsarFromGit
        delete_AddCsarFromGit:
          node: AddExtendedTypes
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.delete
          on-success:
            - AddCsarFromGit_deleted
        AddCsarFromGit_deleted:
          node: AddExtendedTypes
          activity:
            set_state: deleted
          on-success:
            - Alien4Cloud_2_stopping
        AddCsarFromGit_stopping_1:
          node: AddMockTypes
          activity:
            set_state: stopping
          on-success:
            - stop_AddCsarFromGit_1
        stop_AddCsarFromGit_1:
          node: AddMockTypes
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - AddCsarFromGit_stopped_1
        AddCsarFromGit_stopped_1:
          node: AddMockTypes
          activity:
            set_state: stopped
          on-success:
            - AddCsarFromGit_deleting_1
        AddCsarFromGit_deleting_1:
          node: AddMockTypes
          activity:
            set_state: deleting
          on-success:
            - delete_AddCsarFromGit_1
        delete_AddCsarFromGit_1:
          node: AddMockTypes
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.delete
          on-success:
            - AddCsarFromGit_deleted_1
        AddCsarFromGit_deleted_1:
          node: AddMockTypes
          activity:
            set_state: deleted
          on-success:
            - Alien4Cloud_2_stopping
        GraphiteService_uninstall:
          node: GraphiteService
          activity:
            delegate: uninstall
        GrafanaService_uninstall:
          node: GrafanaService
          activity:
            delegate: uninstall
        DiamondLinuxAgent_2_stopping:
          node: Hostpool_Compute_agent
          activity:
            set_state: stopping
          on-success:
            - stop_DiamondLinuxAgent_2
        stop_DiamondLinuxAgent_2:
          node: Hostpool_Compute_agent
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - DiamondLinuxAgent_2_stopped
        DiamondLinuxAgent_2_stopped:
          node: Hostpool_Compute_agent
          activity:
            set_state: stopped
          on-success:
            - DiamondLinuxAgent_2_deleting
        DiamondLinuxAgent_2_deleting:
          node: Hostpool_Compute_agent
          activity:
            set_state: deleting
          on-success:
            - delete_DiamondLinuxAgent_2
        delete_DiamondLinuxAgent_2:
          node: Hostpool_Compute_agent
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.delete
          on-success:
            - DiamondLinuxAgent_2_deleted
        DiamondLinuxAgent_2_deleted:
          node: Hostpool_Compute_agent
          activity:
            set_state: deleted
          on-success:
            - GraphiteService_uninstall
            - GrafanaService_uninstall
            - Compute_uninstall_1
    start:
      steps:
        Alien4Cloud_started:
          node: Alien4Cloud
          activity:
            set_state: started
          on-success:
            - AddMockTypes_starting
            - PluginConfigurator_starting
            - AddExtendedTypes_starting
            - DiamondLinuxAgent_starting
            - OrchestratorConfigurator_starting
        start_HostPool:
          node: HostPool
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - HostPool_started
        Apache_started:
          node: Apache
          activity:
            set_state: started
          on-success:
            - PluginConfigurator_starting
        AWSHostpoolFeeder_starting:
          node: AWSHostpoolFeeder
          activity:
            set_state: starting
          on-success:
            - start_AWSHostpoolFeeder
        start_AddExtendedTypes:
          node: AddExtendedTypes
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - AddExtendedTypes_started
        OracleJDK_starting:
          node: OracleJDK
          activity:
            set_state: starting
          on-success:
            - start_OracleJDK
        start_DiamondLinuxAgent:
          node: A4C_Compute_Agent
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - DiamondLinuxAgent_started
        DiamondLinuxAgent_started:
          node: A4C_Compute_Agent
          activity:
            set_state: started
        HostPool_starting:
          node: HostPool
          activity:
            set_state: starting
          on-success:
            - start_HostPool
        HostPool_started:
          node: HostPool
          activity:
            set_state: started
          on-success:
            - ByonLocationConfigurator_starting
            - AWSHostpoolFeeder_starting
        OrchestratorConfigurator_starting:
          node: OrchestratorConfigurator
          activity:
            set_state: starting
          on-success:
            - start_OrchestratorConfigurator
        A4C_Compute_start:
          node: A4C_Compute
          activity:
            delegate: start
          on-success:
            - OracleJDK_starting
            - DiamondLinuxAgent_starting
        ElasticSearch_started:
          node: ElasticSearch
          activity:
            set_state: started
          on-success:
            - Alien4Cloud_starting
            - DiamondLinuxAgent_starting
        Alien4Cloud_starting:
          node: Alien4Cloud
          activity:
            set_state: starting
          on-success:
            - start_Alien4Cloud
        AddMockTypes_starting:
          node: AddMockTypes
          activity:
            set_state: starting
          on-success:
            - start_AddMockTypes
        PluginConfigurator_started:
          node: PluginConfigurator
          activity:
            set_state: started
        start_Apache:
          node: Apache
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - Apache_started
        DiamondLinuxAgent_starting:
          node: A4C_Compute_Agent
          activity:
            set_state: starting
          on-success:
            - start_DiamondLinuxAgent
        AddExtendedTypes_starting:
          node: AddExtendedTypes
          activity:
            set_state: starting
          on-success:
            - start_AddExtendedTypes
        AWSHostpoolFeeder_started:
          node: AWSHostpoolFeeder
          activity:
            set_state: started
        start_AddMockTypes:
          node: AddMockTypes
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - AddMockTypes_started
        ByonLocationConfigurator_started:
          node: ByonLocationConfigurator
          activity:
            set_state: started
        CloudifyManagerService_start:
          node: CloudifyManagerService
          activity:
            delegate: start
          on-success:
            - PluginConfigurator_starting
            - OrchestratorConfigurator_starting
        start_ByonLocationConfigurator:
          node: ByonLocationConfigurator
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - ByonLocationConfigurator_started
        start_PluginConfigurator:
          node: PluginConfigurator
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - PluginConfigurator_started
        Apache_starting:
          node: Apache
          activity:
            set_state: starting
          on-success:
            - start_Apache
        PluginConfigurator_starting:
          node: PluginConfigurator
          activity:
            set_state: starting
          on-success:
            - start_PluginConfigurator
        AddMockTypes_started:
          node: AddMockTypes
          activity:
            set_state: started
        ElasticSearch_starting:
          node: ElasticSearch
          activity:
            set_state: starting
          on-success:
            - start_ElasticSearch
        HostPool_Compute_start:
          node: HostPool_Compute
          activity:
            delegate: start
          on-success:
            - AWSHostpoolFeeder_starting
            - Apache_starting
            - DiamondLinuxAgent_2_starting
            - HostPool_starting
        start_Alien4Cloud:
          node: Alien4Cloud
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - Alien4Cloud_started
        start_OracleJDK:
          node: OracleJDK
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - OracleJDK_started
        start_OrchestratorConfigurator:
          node: OrchestratorConfigurator
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - OrchestratorConfigurator_started
        ByonLocationConfigurator_starting:
          node: ByonLocationConfigurator
          activity:
            set_state: starting
          on-success:
            - start_ByonLocationConfigurator
        start_AWSHostpoolFeeder:
          node: AWSHostpoolFeeder
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - AWSHostpoolFeeder_started
        OrchestratorConfigurator_started:
          node: OrchestratorConfigurator
          activity:
            set_state: started
          on-success:
            - ByonLocationConfigurator_starting
        AddExtendedTypes_started:
          node: AddExtendedTypes
          activity:
            set_state: started
          on-success:
            - AddMockTypes_starting
        start_ElasticSearch:
          node: ElasticSearch
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - ElasticSearch_started
        OracleJDK_started:
          node: OracleJDK
          activity:
            set_state: started
          on-success:
            - Alien4Cloud_starting
            - ElasticSearch_starting
        GraphiteService_start:
          node: GraphiteService
          activity:
            delegate: start
          on-success:
            - DiamondLinuxAgent_2_starting
            - DiamondLinuxAgent_starting
        GrafanaService_start:
          node: GrafanaService
          activity:
            delegate: start
          on-success:
            - DiamondLinuxAgent_2_starting
            - DiamondLinuxAgent_starting
        DiamondLinuxAgent_2_starting:
          node: Hostpool_Compute_agent
          activity:
            set_state: starting
          on-success:
            - start_DiamondLinuxAgent_2
        start_DiamondLinuxAgent_2:
          node: Hostpool_Compute_agent
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - DiamondLinuxAgent_2_started
        DiamondLinuxAgent_2_started:
          node: Hostpool_Compute_agent
          activity:
            set_state: started
    stop:
      steps:
        stop_PluginConfigurator:
          node: PluginConfigurator
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - PluginConfigurator_stopped
        PluginConfigurator_stopped:
          node: PluginConfigurator
          activity:
            set_state: stopped
          on-success:
            - CloudifyManagerService_stop
            - Apache_stopping
        Alien4Cloud_stopping:
          node: Alien4Cloud
          activity:
            set_state: stopping
          on-success:
            - stop_Alien4Cloud
        stop_OrchestratorConfigurator:
          node: OrchestratorConfigurator
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - OrchestratorConfigurator_stopped
        DiamondLinuxAgent_stopping:
          node: A4C_Compute_Agent
          activity:
            set_state: stopping
          on-success:
            - stop_DiamondLinuxAgent
        ElasticSearch_stopping:
          node: ElasticSearch
          activity:
            set_state: stopping
          on-success:
            - stop_ElasticSearch
        Apache_stopped:
          node: Apache
          activity:
            set_state: stopped
          on-success:
            - HostPool_Compute_stop
        Apache_stopping:
          node: Apache
          activity:
            set_state: stopping
          on-success:
            - stop_Apache
        PluginConfigurator_stopping:
          node: PluginConfigurator
          activity:
            set_state: stopping
          on-success:
            - stop_PluginConfigurator
        AddMockTypes_stopping:
          node: AddMockTypes
          activity:
            set_state: stopping
          on-success:
            - stop_AddMockTypes
        AddExtendedTypes_stopped:
          node: AddExtendedTypes
          activity:
            set_state: stopped
          on-success:
            - Alien4Cloud_stopping
        OracleJDK_stopped:
          node: OracleJDK
          activity:
            set_state: stopped
          on-success:
            - A4C_Compute_stop
        AWSHostpoolFeeder_stopped:
          node: AWSHostpoolFeeder
          activity:
            set_state: stopped
          on-success:
            - HostPool_Compute_stop
        OracleJDK_stopping:
          node: OracleJDK
          activity:
            set_state: stopping
          on-success:
            - stop_OracleJDK
        AddExtendedTypes_stopping:
          node: AddExtendedTypes
          activity:
            set_state: stopping
          on-success:
            - stop_AddExtendedTypes
        A4C_Compute_stop:
          node: A4C_Compute
          activity:
            delegate: stop
        HostPool_stopping:
          node: HostPool
          activity:
            set_state: stopping
          on-success:
            - stop_HostPool
        stop_Alien4Cloud:
          node: Alien4Cloud
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - Alien4Cloud_stopped
        stop_DiamondLinuxAgent:
          node: A4C_Compute_Agent
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - DiamondLinuxAgent_stopped
        stop_AddExtendedTypes:
          node: AddExtendedTypes
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - AddExtendedTypes_stopped
        stop_HostPool:
          node: HostPool
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - HostPool_stopped
        Alien4Cloud_stopped:
          node: Alien4Cloud
          activity:
            set_state: stopped
          on-success:
            - OracleJDK_stopping
        AWSHostpoolFeeder_stopping:
          node: AWSHostpoolFeeder
          activity:
            set_state: stopping
          on-success:
            - stop_AWSHostpoolFeeder
        stop_AWSHostpoolFeeder:
          node: AWSHostpoolFeeder
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - AWSHostpoolFeeder_stopped
        AddMockTypes_stopped:
          node: AddMockTypes
          activity:
            set_state: stopped
          on-success:
            - Alien4Cloud_stopping
        DiamondLinuxAgent_stopped:
          node: A4C_Compute_Agent
          activity:
            set_state: stopped
          on-success:
            - A4C_Compute_stop
            - GraphiteService_stop
            - GrafanaService_stop
        HostPool_stopped:
          node: HostPool
          activity:
            set_state: stopped
          on-success:
            - HostPool_Compute_stop
        ByonLocationConfigurator_stopping:
          node: ByonLocationConfigurator
          activity:
            set_state: stopping
          on-success:
            - stop_ByonLocationConfigurator
        OrchestratorConfigurator_stopping:
          node: OrchestratorConfigurator
          activity:
            set_state: stopping
          on-success:
            - stop_OrchestratorConfigurator
        HostPool_Compute_stop:
          node: HostPool_Compute
          activity:
            delegate: stop
        stop_AddMockTypes:
          node: AddMockTypes
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - AddMockTypes_stopped
        ByonLocationConfigurator_stopped:
          node: ByonLocationConfigurator
          activity:
            set_state: stopped
          on-success:
            - OrchestratorConfigurator_stopping
        stop_Apache:
          node: Apache
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - Apache_stopped
        CloudifyManagerService_stop:
          node: CloudifyManagerService
          activity:
            delegate: stop
        stop_OracleJDK:
          node: OracleJDK
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - OracleJDK_stopped
        OrchestratorConfigurator_stopped:
          node: OrchestratorConfigurator
          activity:
            set_state: stopped
          on-success:
            - CloudifyManagerService_stop
            - Alien4Cloud_stopping
        ElasticSearch_stopped:
          node: ElasticSearch
          activity:
            set_state: stopped
          on-success:
            - OracleJDK_stopping
        stop_ByonLocationConfigurator:
          node: ByonLocationConfigurator
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - ByonLocationConfigurator_stopped
        stop_ElasticSearch:
          node: ElasticSearch
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - ElasticSearch_stopped
        GraphiteService_stop:
          node: GraphiteService
          activity:
            delegate: stop
        GrafanaService_stop:
          node: GrafanaService
          activity:
            delegate: stop
        DiamondLinuxAgent_2_stopping:
          node: Hostpool_Compute_agent
          activity:
            set_state: stopping
          on-success:
            - stop_DiamondLinuxAgent_2
        stop_DiamondLinuxAgent_2:
          node: Hostpool_Compute_agent
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - DiamondLinuxAgent_2_stopped
        DiamondLinuxAgent_2_stopped:
          node: Hostpool_Compute_agent
          activity:
            set_state: stopped
          on-success:
            - HostPool_Compute_stop
            - GraphiteService_stop
            - GrafanaService_stop
