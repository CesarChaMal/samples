tosca_definitions_version: alien_dsl_2_0_0

metadata:
  template_name: artemis.hadoop.repository
  template_version: 2.1.0-SNAPSHOT
  template_author: alien4cloud

imports:
  - tosca-normative-types:1.0.0-ALIEN20
  - artemis.hadoop.pub:2.1.0-SNAPSHOT

node_types:

  artemis.hadoop.repository.nodes.HdfsRepository:
    derived_from: artemis.hadoop.pub.nodes.HdfsRepositoryService
    description: a distributed repository to store files
    metadata:
      icon: /images/hdfs.jpeg
    properties:
      # hdfs_url:
      #   type: string
      path:
        type: string
    attributes:
      hdfs_url: { get_operation_output: [ SELF, Standard, configure, HDFS_URL ] }
      hdfs_folder_url: { get_operation_output: [ SELF, Standard, start, HDFS_FOLDER_URL ] }
      hdfs_folder_path: { get_operation_output: [ SELF, Standard, start, HDFS_FOLDER_PATH ] }
    requirements:
      # - host:
      #     capability: tosca.capabilities.Container
      #     relationship: tosca.relationships.HostedOn
      #     occurrences: [ 0, 1 ]
      - hdfs:
          capability: artemis.hadoop.pub.capabilities.HDFSEndpoint
          relationship: artemis.hadoop.repository.relationships.HdfsRepositoryConnectToHDFSService
          occurrences: [ 1, 1 ]
    interfaces:
      Standard:
        configure:
          implementation: scripts/configure.sh
        start:
          inputs:
            HDFS_URL: { get_attribute: [SELF, hdfs_url] }
            HDFS_PATH: { get_property: [SELF, path] }
          implementation: scripts/start.sh
        delete:
          inputs:
            HDFS_URL: { get_attribute: [SELF, hdfs_url] }
            HDFS_PATH: { get_property: [SELF, path] }
          implementation: scripts/delete.sh

relationship_types:

  artemis.hadoop.repository.relationships.HdfsRepositoryConnectToHDFSService:
    derived_from: tosca.relationships.ConnectsTo
    valid_target_types: [artemis.hadoop.pub.nodes.HDFSService]
    interfaces:
      Configure:
        pre_configure_source:
          inputs:
            HDFS_URL: { concat: [get_property: [TARGET, hdfs_endpoint, protocol], "://", get_attribute: [TARGET, hdfs_endpoint, ip_address], ":", get_property: [TARGET, hdfs_endpoint, port]] }
          implementation: scripts/HdfsRepositoryConnectToHDFSService/pre_configure_source.sh
