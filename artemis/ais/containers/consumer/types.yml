tosca_definitions_version: alien_dsl_2_0_0

metadata:
  template_name: artemis.ais.consumer
  template_version: 2.1.0-SNAPSHOT
  template_author: alien4cloud

imports:
  - tosca-normative-types:1.0.0-ALIEN20
  - docker-types:2.1.0-SNAPSHOT
  - artemis.kafka.pub:2.1.0-SNAPSHOT
  - artemis.redis.pub:2.1.0-SNAPSHOT
  - artemis.kudu.pub:2.1.0-SNAPSHOT

repositories:
  docker:
    url: https://hub.docker.com/
    type: http

node_types:

  artemis.ais.containers.nodes.Consumer:
    derived_from: tosca.nodes.Container.Application.ConfigurableDockerContainer
    properties:
      docker_run_cmd:
        type: string
        default: "/opt/bigdata/bin/start.sh"
      config_settings:
        type: list
        required: false
        entry_schema:
          type: org.alien4cloud.extended.container.datatypes.ConfigSetting
        default:
        - mount_path: /config
          input_prefix: CFG_
          config_path: configFiles
    requirements:
      - input_topic:
          capability: artemis.kafka.pub.capabilities.KafkaTopic
          relationship: tosca.relationships.ConnectsTo
          occurrences: [1, 1]
      - last_data:
          capability: artemis.redis.pub.capabilities.Redis
          relationship: tosca.relationships.ConnectsTo
          occurrences: [1, 1]
      - fresh_data:
          capability: artemis.kudu.pub.capabilities.Kudu
          relationship: tosca.relationships.ConnectsTo
          occurrences: [1, 1]
    interfaces:
      Standard:
        create:
          inputs:
            CFG_KAFKA_IP: { get_attribute: [TARGET, input_topic, kafka_topic, ip_address] }
            CFG_KAFKA_PORT: { get_attribute: [TARGET, input_topic, kafka_topic, port] }
            CFG_INPUT_TOPIC: { get_property: [TARGET, input_topic, topic_name] }
            CFG_REDIS_IP: { get_attribute: [TARGET, last_data, redis_endpoint, ip_address] }
            CFG_REDIS_PORT: { get_attribute: [TARGET, last_data, redis_endpoint, port] }
            CFG_KUDU_IP: { get_attribute: [TARGET, fresh_data, kudu_endpoint, ip_address] }
            CFG_KUDU_PORT: { get_attribute: [TARGET, fresh_data, kudu_endpoint, port] }
          implementation:
            file: registry.artemis.public/fbouy/ais/bigdata-core-ais-consumer:1.3.00-ARTEMIS-SNAPSHOT
            repository: docker
            type: tosca.artifacts.Deployment.Image.Container.Docker